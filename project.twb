<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Country Parameter' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Portugal&quot;'>
        <calculation class='tableau' formula='&quot;Portugal&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;Andorra&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Anguilla&quot;' />
          <member value='&quot;Antigua and Barbuda&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Aruba&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahamas&quot;' />
          <member value='&quot;Bahrain&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Barbados&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Belize&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bermuda&quot;' />
          <member value='&quot;Bhutan&quot;' />
          <member value='&quot;Bolivia&quot;' />
          <member value='&quot;Bonaire Sint Eustatius and Saba&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Botswana&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;British Virgin Islands&quot;' />
          <member value='&quot;Brunei&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Burundi&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Cape Verde&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Christmas Island&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Comoros&quot;' />
          <member value='&quot;Congo&quot;' />
          <member value='&quot;Cook Islands&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Cote d&apos;Ivoire&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cuba&quot;' />
          <member value='&quot;Curacao&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czechia&quot;' />
          <member value='&quot;Democratic Republic of Congo&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominica&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Equatorial Guinea&quot;' />
          <member value='&quot;Eritrea&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Eswatini&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;EU-27&quot;' />
          <member value='&quot;EU-28&quot;' />
          <member value='&quot;Faeroe Islands&quot;' />
          <member value='&quot;Fiji&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;French Equatorial Africa&quot;' />
          <member value='&quot;French Guiana&quot;' />
          <member value='&quot;French Polynesia&quot;' />
          <member value='&quot;French West Africa&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Greenland&quot;' />
          <member value='&quot;Grenada&quot;' />
          <member value='&quot;Guadeloupe&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Guinea-Bissau&quot;' />
          <member value='&quot;Guyana&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hong Kong&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;International transport&quot;' />
          <member value='&quot;Iran&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kiribati&quot;' />
          <member value='&quot;Kosovo&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kuwaiti Oil Fires&quot;' />
          <member value='&quot;Kyrgyzstan&quot;' />
          <member value='&quot;Laos&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Leeward Islands&quot;' />
          <member value='&quot;Lesotho&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Libya&quot;' />
          <member value='&quot;Liechtenstein&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Macao&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malawi&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Mali&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Marshall Islands&quot;' />
          <member value='&quot;Martinique&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mayotte&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Micronesia&quot;' />
          <member value='&quot;Micronesia (country)&quot;' />
          <member value='&quot;Moldova&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Montserrat&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;Myanmar&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nauru&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Caledonia&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;Niue&quot;' />
          <member value='&quot;North Macedonia&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oceania&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Palau&quot;' />
          <member value='&quot;Palestine&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Panama Canal Zone&quot;' />
          <member value='&quot;Papua New Guinea&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Puerto Rico&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Reunion&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russia&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Ryukyu Islands&quot;' />
          <member value='&quot;Saint Helena&quot;' />
          <member value='&quot;Saint Kitts and Nevis&quot;' />
          <member value='&quot;Saint Lucia&quot;' />
          <member value='&quot;Saint Pierre and Miquelon&quot;' />
          <member value='&quot;Saint Vincent and the Grenadines&quot;' />
          <member value='&quot;Samoa&quot;' />
          <member value='&quot;Sao Tome and Principe&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Seychelles&quot;' />
          <member value='&quot;Sierra Leone&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Sint Maarten (Dutch part)&quot;' />
          <member value='&quot;Slovakia&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Solomon Islands&quot;' />
          <member value='&quot;Somalia&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;South Korea&quot;' />
          <member value='&quot;South Sudan&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;St. Kitts-Nevis-Anguilla&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Syria&quot;' />
          <member value='&quot;Taiwan&quot;' />
          <member value='&quot;Tajikistan&quot;' />
          <member value='&quot;Tanzania&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;Timor&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Tonga&quot;' />
          <member value='&quot;Trinidad and Tobago&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Turkmenistan&quot;' />
          <member value='&quot;Turks and Caicos Islands&quot;' />
          <member value='&quot;Tuvalu&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;United Kingdom&quot;' />
          <member value='&quot;United States&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Vanuatu&quot;' />
          <member value='&quot;Venezuela&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;Wallis and Futuna&quot;' />
          <member value='&quot;Yemen&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
        </members>
      </column>
      <column caption='country_parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cuba&quot;'>
        <calculation class='tableau' formula='&quot;Cuba&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;Andorra&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Anguilla&quot;' />
          <member value='&quot;Antigua and Barbuda&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Aruba&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahamas&quot;' />
          <member value='&quot;Bahrain&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Barbados&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Belize&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bermuda&quot;' />
          <member value='&quot;Bhutan&quot;' />
          <member value='&quot;Bolivia&quot;' />
          <member value='&quot;Bonaire Sint Eustatius and Saba&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Botswana&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;British Virgin Islands&quot;' />
          <member value='&quot;Brunei&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Burundi&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Cape Verde&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Christmas Island&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Comoros&quot;' />
          <member value='&quot;Congo&quot;' />
          <member value='&quot;Cook Islands&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Cote d&apos;Ivoire&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cuba&quot;' />
          <member value='&quot;Curacao&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czechia&quot;' />
          <member value='&quot;Democratic Republic of Congo&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominica&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Equatorial Guinea&quot;' />
          <member value='&quot;Eritrea&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Eswatini&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;Faeroe Islands&quot;' />
          <member value='&quot;Fiji&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;French Equatorial Africa&quot;' />
          <member value='&quot;French Guiana&quot;' />
          <member value='&quot;French Polynesia&quot;' />
          <member value='&quot;French West Africa&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Greenland&quot;' />
          <member value='&quot;Grenada&quot;' />
          <member value='&quot;Guadeloupe&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Guinea-Bissau&quot;' />
          <member value='&quot;Guyana&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hong Kong&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;India&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;International transport&quot;' />
          <member value='&quot;Iran&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kiribati&quot;' />
          <member value='&quot;Kosovo&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kuwaiti Oil Fires&quot;' />
          <member value='&quot;Kyrgyzstan&quot;' />
          <member value='&quot;Laos&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Leeward Islands&quot;' />
          <member value='&quot;Lesotho&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Libya&quot;' />
          <member value='&quot;Liechtenstein&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Macao&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malawi&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Mali&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Marshall Islands&quot;' />
          <member value='&quot;Martinique&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mayotte&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Micronesia&quot;' />
          <member value='&quot;Micronesia (country)&quot;' />
          <member value='&quot;Moldova&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Montserrat&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;Myanmar&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nauru&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Caledonia&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;Niue&quot;' />
          <member value='&quot;North America&quot;' />
          <member value='&quot;North America (excl. USA)&quot;' />
          <member value='&quot;North Korea&quot;' />
          <member value='&quot;North Macedonia&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oceania&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Palau&quot;' />
          <member value='&quot;Palestine&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Panama Canal Zone&quot;' />
          <member value='&quot;Papua New Guinea&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Puerto Rico&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Reunion&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russia&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Ryukyu Islands&quot;' />
          <member value='&quot;Saint Helena&quot;' />
          <member value='&quot;Saint Kitts and Nevis&quot;' />
          <member value='&quot;Saint Lucia&quot;' />
          <member value='&quot;Saint Pierre and Miquelon&quot;' />
          <member value='&quot;Saint Vincent and the Grenadines&quot;' />
          <member value='&quot;Samoa&quot;' />
          <member value='&quot;Sao Tome and Principe&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Seychelles&quot;' />
          <member value='&quot;Sierra Leone&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Sint Maarten (Dutch part)&quot;' />
          <member value='&quot;Slovakia&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Solomon Islands&quot;' />
          <member value='&quot;Somalia&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;South America&quot;' />
          <member value='&quot;South Korea&quot;' />
          <member value='&quot;South Sudan&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;St. Kitts-Nevis-Anguilla&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Syria&quot;' />
          <member value='&quot;Taiwan&quot;' />
          <member value='&quot;Tajikistan&quot;' />
          <member value='&quot;Tanzania&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;Timor&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Tonga&quot;' />
          <member value='&quot;Trinidad and Tobago&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Turkmenistan&quot;' />
          <member value='&quot;Turks and Caicos Islands&quot;' />
          <member value='&quot;Tuvalu&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;United Kingdom&quot;' />
          <member value='&quot;United States&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Vanuatu&quot;' />
          <member value='&quot;Venezuela&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;Wallis and Futuna&quot;' />
          <member value='&quot;Yemen&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='co2 new (co2_project)' inline='true' name='federated.0iadx9u0zjyzps1fohv8z0p5h01b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.06lqjcr1589twi18h9uj41nilsnd'>
            <connection class='mysql' dbname='co2_project' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.06lqjcr1589twi18h9uj41nilsnd' name='co2 new' table='[co2 new]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.06lqjcr1589twi18h9uj41nilsnd' name='co2 new' table='[co2 new]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>3</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>3</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>3</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>3</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='country_calculation' datatype='boolean' name='[Calculation_458241302262734848]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]=[country]' />
      </column>
      <column datatype='string' name='[Country_filter]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[country]' new-bin='true'>
          <bin default-name='true' value='&quot;Afghanistan, Africa, Albania and 13 more&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Africa&quot;</value>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Andorra&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Anguilla&quot;</value>
            <value>&quot;Antarctica&quot;</value>
            <value>&quot;Antigua and Barbuda&quot;</value>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Aruba&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Benin&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='co2 new' datatype='table' name='[__tableau_internal_object_id__].[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='integer' name='[other_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='integer' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[co2]' derivation='Avg' name='[avg:co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cement_co2]' derivation='Sum' name='[cum:sum:cement_co2:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[cement_co2]' derivation='Sum' name='[pcto:sum:cement_co2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[co2]' derivation='Sum' name='[pcto:sum:co2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[coal_co2]' derivation='Sum' name='[pcto:sum:coal_co2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[flaring_co2]' derivation='Sum' name='[pcto:sum:flaring_co2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[gas_co2]' derivation='Sum' name='[pcto:sum:gas_co2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[oil_co2]' derivation='Sum' name='[pcto:sum:oil_co2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[other_industry_co2]' derivation='Sum' name='[pcto:sum:other_industry_co2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Lenovo/OneDrive/Documents/My Tableau Repository/Datasources/co2 new (co2_project).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/25/2023 11:06:11 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='co2 new (co2_project)' increment-value='%null%' refresh-type='create' rows-inserted='10826' timestamp-start='2023-06-25 11:06:10.963' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>0</ordinal>
              <family>co2 new</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>280</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>co2 new</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2</remote-alias>
              <ordinal>2</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3558</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_growth_prct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_growth_prct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_growth_prct</remote-alias>
              <ordinal>3</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2647</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_per_capita</remote-alias>
              <ordinal>4</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3585</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cumulative_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cumulative_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cumulative_co2</remote-alias>
              <ordinal>5</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8315</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coal_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal_co2</remote-alias>
              <ordinal>6</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2111</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cement_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cement_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cement_co2</remote-alias>
              <ordinal>7</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2150</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flaring_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flaring_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flaring_co2</remote-alias>
              <ordinal>8</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1556</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas_co2</remote-alias>
              <ordinal>9</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2413</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>oil_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[oil_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>oil_co2</remote-alias>
              <ordinal>10</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3203</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_industry_co2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[other_industry_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_industry_co2</remote-alias>
              <ordinal>11</ordinal>
              <family>co2 new</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cement_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cement_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cement_co2_per_capita</remote-alias>
              <ordinal>12</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>580</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coal_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal_co2_per_capita</remote-alias>
              <ordinal>13</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1610</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flaring_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flaring_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flaring_co2_per_capita</remote-alias>
              <ordinal>14</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>539</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas_co2_per_capita</remote-alias>
              <ordinal>15</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1669</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>oil_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[oil_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>oil_co2_per_capita</remote-alias>
              <ordinal>16</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2888</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_co2_per_capita</remote-name>
              <remote-type>20</remote-type>
              <local-name>[other_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_co2_per_capita</remote-alias>
              <ordinal>17</ordinal>
              <family>co2 new</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trade_co2_share</remote-name>
              <remote-type>20</remote-type>
              <local-name>[trade_co2_share]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trade_co2_share</remote-alias>
              <ordinal>18</ordinal>
              <family>co2 new</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>228</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>19</ordinal>
              <family>co2 new</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9972</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[cum:sum:cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:co2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:oil_co2:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:oil_co2:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:gas_co2:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:gas_co2:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:coal_co2:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:coal_co2:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:other_industry_co2:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:other_industry_co2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[avg:co2:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:flaring_co2:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:flaring_co2:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='country_parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cuba&quot;'>
          <calculation class='tableau' formula='&quot;Cuba&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='co2 new' id='co2 new_8AFFCB4D0E044C51915ECB790B0116F7'>
            <properties context=''>
              <relation connection='mysql.06lqjcr1589twi18h9uj41nilsnd' name='co2 new' table='[co2 new]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='co2_emission (co2_emission_analysis)' inline='true' name='federated.1dkg6me1xmfshc1g3kuh21i1f30d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0yh14751r1bmme1cv8vr11ce4grp'>
            <connection class='mysql' dbname='co2_emission_analysis' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.0yh14751r1bmme1cv8vr11ce4grp' name='co2_emission' table='[co2_emission]' type='table'>
          <columns>
            <column datatype='integer' date-parse-format='yyyy' name='year' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.0yh14751r1bmme1cv8vr11ce4grp' name='co2_emission' table='[co2_emission]' type='table'>
          <columns>
            <column datatype='integer' date-parse-format='yyyy' name='year' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>3</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>3</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>3</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>3</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country Field' datatype='boolean' name='[Calculation_661184761098993666]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Country Parameter]= [country]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='co2_emission' datatype='table' name='[__tableau_internal_object_id__].[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='integer' name='[other_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='integer' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:co2_emission_C90EF207545A4B48A34CD04C30AC1A15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[country]' derivation='Attribute' name='[attr:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cement_co2_per_capita]' derivation='Sum' name='[sum:cement_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_growth_prct]' derivation='Sum' name='[sum:co2_growth_prct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal_co2_per_capita]' derivation='Sum' name='[sum:coal_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cumulative_co2]' derivation='Sum' name='[sum:cumulative_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flaring_co2_per_capita]' derivation='Sum' name='[sum:flaring_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas_co2_per_capita]' derivation='Sum' name='[sum:gas_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_co2_per_capita]' derivation='Sum' name='[sum:oil_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_co2_per_capita]' derivation='Sum' name='[sum:other_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trade_co2_share]' derivation='Sum' name='[sum:trade_co2_share:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Lenovo/Downloads/co2_emission (co2_emission_analysis).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/25/2023 10:59:59 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='co2_emission (co2_emission_analysis)' increment-value='%null%' refresh-type='create' rows-inserted='10826' timestamp-start='2023-06-25 10:59:58.281' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>0</ordinal>
              <family>co2_emission</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>280</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>co2_emission</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2</remote-alias>
              <ordinal>2</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3558</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_growth_prct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_growth_prct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_growth_prct</remote-alias>
              <ordinal>3</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2647</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_per_capita</remote-alias>
              <ordinal>4</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3585</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cumulative_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cumulative_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cumulative_co2</remote-alias>
              <ordinal>5</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8315</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coal_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal_co2</remote-alias>
              <ordinal>6</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2111</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cement_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cement_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cement_co2</remote-alias>
              <ordinal>7</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2150</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flaring_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flaring_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flaring_co2</remote-alias>
              <ordinal>8</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1556</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas_co2</remote-alias>
              <ordinal>9</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2413</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>oil_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[oil_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>oil_co2</remote-alias>
              <ordinal>10</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3203</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_industry_co2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[other_industry_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_industry_co2</remote-alias>
              <ordinal>11</ordinal>
              <family>co2_emission</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cement_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cement_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cement_co2_per_capita</remote-alias>
              <ordinal>12</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>580</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coal_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal_co2_per_capita</remote-alias>
              <ordinal>13</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1610</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flaring_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flaring_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flaring_co2_per_capita</remote-alias>
              <ordinal>14</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>539</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas_co2_per_capita</remote-alias>
              <ordinal>15</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1669</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>oil_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[oil_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>oil_co2_per_capita</remote-alias>
              <ordinal>16</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2888</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_co2_per_capita</remote-name>
              <remote-type>20</remote-type>
              <local-name>[other_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_co2_per_capita</remote-alias>
              <ordinal>17</ordinal>
              <family>co2_emission</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trade_co2_share</remote-name>
              <remote-type>20</remote-type>
              <local-name>[trade_co2_share]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trade_co2_share</remote-alias>
              <ordinal>18</ordinal>
              <family>co2_emission</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>228</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>19</ordinal>
              <family>co2_emission</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9972</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[__tableau_internal_object_id__].[cnt:co2_emission_C90EF207545A4B48A34CD04C30AC1A15:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:oil_co2:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:gas_co2:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:gas_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:cumulative_co2:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:co2_growth_prct:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:trade_co2_share:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:cement_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:other_industry_co2:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:oil_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:flaring_co2:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:coal_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:coal_co2:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:other_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:flaring_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:co2:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Country Parameter' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Portugal&quot;'>
          <calculation class='tableau' formula='&quot;Portugal&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='co2_emission' id='co2_emission_C90EF207545A4B48A34CD04C30AC1A15'>
            <properties context=''>
              <relation connection='mysql.0yh14751r1bmme1cv8vr11ce4grp' name='co2_emission' table='[co2_emission]' type='table'>
                <columns>
                  <column datatype='integer' date-parse-format='yyyy' name='year' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Co2 New' inline='true' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Co2 New' name='textscan.1wie4s40iahhsx15fzy4c1ftxfof'>
            <connection class='textscan' directory='C:/Users/Lenovo/Downloads' filename='Co2 New.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1wie4s40iahhsx15fzy4c1ftxfof' name='Co2 New.csv' table='[Co2 New#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='co2' ordinal='2' />
            <column datatype='real' name='co2_growth_prct' ordinal='3' />
            <column datatype='real' name='co2_per_capita' ordinal='4' />
            <column datatype='real' name='cumulative_co2' ordinal='5' />
            <column datatype='real' name='coal_co2' ordinal='6' />
            <column datatype='real' name='cement_co2' ordinal='7' />
            <column datatype='real' name='flaring_co2' ordinal='8' />
            <column datatype='real' name='gas_co2' ordinal='9' />
            <column datatype='real' name='oil_co2' ordinal='10' />
            <column datatype='real' name='other_industry_co2' ordinal='11' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
            <column datatype='real' name='other_co2_per_capita' ordinal='17' />
            <column datatype='real' name='trade_co2_share' ordinal='18' />
            <column datatype='integer' name='population' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1wie4s40iahhsx15fzy4c1ftxfof' name='Co2 New.csv' table='[Co2 New#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='co2' ordinal='2' />
            <column datatype='real' name='co2_growth_prct' ordinal='3' />
            <column datatype='real' name='co2_per_capita' ordinal='4' />
            <column datatype='real' name='cumulative_co2' ordinal='5' />
            <column datatype='real' name='coal_co2' ordinal='6' />
            <column datatype='real' name='cement_co2' ordinal='7' />
            <column datatype='real' name='flaring_co2' ordinal='8' />
            <column datatype='real' name='gas_co2' ordinal='9' />
            <column datatype='real' name='oil_co2' ordinal='10' />
            <column datatype='real' name='other_industry_co2' ordinal='11' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
            <column datatype='real' name='other_co2_per_capita' ordinal='17' />
            <column datatype='real' name='trade_co2_share' ordinal='18' />
            <column datatype='integer' name='population' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Co2 New.csv' datatype='table' name='[__tableau_internal_object_id__].[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='real' name='[other_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='real' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Lenovo/Downloads/Co2 New.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/26/2023 06:25:21 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Co2 New' increment-value='%null%' refresh-type='create' rows-inserted='10918' timestamp-start='2023-06-26 06:25:21.289' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>0</ordinal>
              <family>Co2 New.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>275</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>Co2 New.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2</remote-alias>
              <ordinal>2</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3622</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_growth_prct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_growth_prct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_growth_prct</remote-alias>
              <ordinal>3</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2525</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_per_capita</remote-alias>
              <ordinal>4</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3545</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cumulative_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cumulative_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cumulative_co2</remote-alias>
              <ordinal>5</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6566</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coal_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal_co2</remote-alias>
              <ordinal>6</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2272</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cement_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cement_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cement_co2</remote-alias>
              <ordinal>7</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2198</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flaring_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flaring_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flaring_co2</remote-alias>
              <ordinal>8</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1470</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas_co2</remote-alias>
              <ordinal>9</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2611</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>oil_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[oil_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>oil_co2</remote-alias>
              <ordinal>10</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3344</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_industry_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[other_industry_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_industry_co2</remote-alias>
              <ordinal>11</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1265</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cement_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cement_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cement_co2_per_capita</remote-alias>
              <ordinal>12</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>609</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coal_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal_co2_per_capita</remote-alias>
              <ordinal>13</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1783</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flaring_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flaring_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flaring_co2_per_capita</remote-alias>
              <ordinal>14</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>547</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas_co2_per_capita</remote-alias>
              <ordinal>15</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1739</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>oil_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[oil_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>oil_co2_per_capita</remote-alias>
              <ordinal>16</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3043</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[other_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_co2_per_capita</remote-alias>
              <ordinal>17</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trade_co2_share</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trade_co2_share]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trade_co2_share</remote-alias>
              <ordinal>18</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3141</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>19</ordinal>
              <family>Co2 New.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10104</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Co2 New.csv' id='Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED'>
            <properties context=''>
              <relation connection='textscan.1wie4s40iahhsx15fzy4c1ftxfof' name='Co2 New.csv' table='[Co2 New#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='real' name='co2' ordinal='2' />
                  <column datatype='real' name='co2_growth_prct' ordinal='3' />
                  <column datatype='real' name='co2_per_capita' ordinal='4' />
                  <column datatype='real' name='cumulative_co2' ordinal='5' />
                  <column datatype='real' name='coal_co2' ordinal='6' />
                  <column datatype='real' name='cement_co2' ordinal='7' />
                  <column datatype='real' name='flaring_co2' ordinal='8' />
                  <column datatype='real' name='gas_co2' ordinal='9' />
                  <column datatype='real' name='oil_co2' ordinal='10' />
                  <column datatype='real' name='other_industry_co2' ordinal='11' />
                  <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
                  <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
                  <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
                  <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
                  <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
                  <column datatype='real' name='other_co2_per_capita' ordinal='17' />
                  <column datatype='real' name='trade_co2_share' ordinal='18' />
                  <column datatype='integer' name='population' ordinal='19' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='co2 new (co2_project) (2)' inline='true' name='federated.1iwipx806u7te3162fsd70mv9p4u' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.10gyxj70qcl7am1a11ius19lcgbe'>
            <connection class='mysql' dbname='co2_project' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.10gyxj70qcl7am1a11ius19lcgbe' name='co2 new' table='[co2 new]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.10gyxj70qcl7am1a11ius19lcgbe' name='co2 new' table='[co2 new]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>3</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>3</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>3</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>3</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='co2 new' datatype='table' name='[__tableau_internal_object_id__].[co2 new_3CA14B4585BC473C9FD37BB97E79F2E4]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='integer' name='[other_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='integer' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='co2 new' id='co2 new_3CA14B4585BC473C9FD37BB97E79F2E4'>
            <properties context=''>
              <relation connection='mysql.10gyxj70qcl7am1a11ius19lcgbe' name='co2 new' table='[co2 new]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Avg CO2 Emission Per Capita of top 10 Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column-instance column='[co2_per_capita]' derivation='Avg' name='[avg:co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([co2_per_capita])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' filter-group='4' included-values='in-range-or-null'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2_per_capita:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cae1ca</color>
                <color>#a7d1a7</color>
                <color>#87c287</color>
                <color>#6bb26b</color>
                <color>#51a351</color>
                <color>#3a933a</color>
                <color>#278327</color>
                <color>#177417</color>
                <color>#0a640a</color>
                <color>#005500</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2_per_capita:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2_per_capita:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{C70FFC7E-369F-4979-8478-7E145FCB3DA4}' />
    </worksheet>
    <worksheet name='Avg CO2 Emission Year Wise'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column-instance column='[co2]' derivation='Avg' name='[avg:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{EC796871-B0DA-4821-906E-572DAC3FBDE1}' />
    </worksheet>
    <worksheet name='Avg CO2 Emission of top 10 Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column-instance column='[co2]' derivation='Avg' name='[avg:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([co2])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' filter-group='4' included-values='in-range-or-null'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' value='88' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{557865BA-E2B4-4E7E-954C-14CC76000207}' />
    </worksheet>
    <worksheet name='Co2 Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' filter-group='4' included-values='in-range-or-null'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Longitude (generated)]' field-type='quantitative' max='25066834.248659536' min='-17942805.020599436' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Latitude (generated)]' field-type='quantitative' max='12804225.913125619' min='-9603594.8132893909' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' />
              <geometry column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Latitude (generated)]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D545A902-6936-4D40-B553-3F2E652C1BCD}' />
    </worksheet>
    <worksheet name='Continent Wise Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[pcto:sum:co2:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:country:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' included-values='in-range'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1004' />
            <format attr='height' value='578' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
              <wedge-size column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' />
              <size column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[pcto:sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AD627E00-B15B-491A-B1E2-F001F408BC15}' />
    </worksheet>
    <worksheet name='Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#606b76' fontsize='18'>OTHER COUNTRIES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emission (co2_emission_analysis)' name='federated.1dkg6me1xmfshc1g3kuh21i1f30d' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Country Parameter' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Portugal&quot;'>
              <calculation class='tableau' formula='&quot;Portugal&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dkg6me1xmfshc1g3kuh21i1f30d'>
            <column caption='Country Field' datatype='boolean' name='[Calculation_661184761098993666]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Country Parameter]= [country]' />
            </column>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_661184761098993666]' derivation='None' name='[none:Calculation_661184761098993666:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:oil_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:Calculation_661184761098993666:nk]'>
            <groupfilter function='member' level='[none:Calculation_661184761098993666:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]</column>
            <column>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:Calculation_661184761098993666:nk]</column>
            <column>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-color' value='#86bcb6' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#a7acad' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#79706e' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-color' data-class='subtotal' value='#69aaa5' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='cols' value='#a7acad' />
            <format attr='div-level' scope='rows' value='0' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e8edda' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#818b91' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[Multiple Values]</rows>
        <cols>([federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk] / [federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{ADAB971B-B3F7-4F6F-A336-5C2B76AB009D}' />
    </worksheet>
    <worksheet name='Extraction Rate over year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{3A89E6E6-18DD-4C57-B50F-1180F4E89AF0}' />
    </worksheet>
    <worksheet name='India'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#606b76' fontsize='18'>INDIA</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emission (co2_emission_analysis)' name='federated.1dkg6me1xmfshc1g3kuh21i1f30d' />
          </datasources>
          <datasource-dependencies datasource='federated.1dkg6me1xmfshc1g3kuh21i1f30d'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:oil_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]</column>
            <column>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-color' scope='cols' value='#f1ce63' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='color' data-class='subtotal' scope='cols' value='#333333' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#606b76' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' scope='cols' value='#79706e' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='border-color' data-class='subtotal' scope='cols' value='#59a14f' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='0' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='4' />
            <format attr='stroke-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='3' />
            <format attr='stroke-color' scope='rows' value='#a7acad' />
            <format attr='stroke-color' scope='cols' value='#a7acad' />
            <format attr='stroke-size' scope='cols' value='3' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e8edda' />
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[Multiple Values]</rows>
        <cols>([federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk] / [federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{7596B1E4-68F3-4DB2-84D7-A20A3ECB3B23}' />
    </worksheet>
    <worksheet name='India vs China in each Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column-instance column='[cement_co2]' derivation='Avg' name='[avg:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Avg' name='[avg:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Avg' name='[avg:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Avg' name='[avg:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Avg' name='[avg:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Avg' name='[avg:other_industry_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:flaring_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:cement_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:other_industry_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols>([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:oil_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:gas_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:flaring_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:coal_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:cement_co2:qk] + [federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:other_industry_co2:qk])))))</cols>
      </table>
      <simple-id uuid='{38C7C569-A1DC-4DAB-88A9-FFDC1DF72F91}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>CO2 due to international factors</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2 new (co2_project)' name='federated.0iadx9u0zjyzps1fohv8z0p5h01b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iadx9u0zjyzps1fohv8z0p5h01b'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwaiti Oil Fires&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk]</rows>
        <cols>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{60B2AD6F-A028-41BD-9E56-75738D165848}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>Factor distribution of CO2 in different countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2 new (co2_project)' name='federated.0iadx9u0zjyzps1fohv8z0p5h01b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iadx9u0zjyzps1fohv8z0p5h01b'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]' direction='DESC' using='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk]' />
          <slices>
            <column>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</column>
            <column>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]</rows>
        <cols>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{47639137-F7BB-4A86-8687-909ABB4BD956}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>Comparision of CO2 and CO2 per capita over the years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2 new (co2_project)' name='federated.0iadx9u0zjyzps1fohv8z0p5h01b' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='country_parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cuba&quot;'>
              <calculation class='tableau' formula='&quot;Cuba&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0iadx9u0zjyzps1fohv8z0p5h01b'>
            <column caption='country_calculation' datatype='boolean' name='[Calculation_458241302262734848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]=[country]' />
            </column>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_458241302262734848]' derivation='None' name='[none:Calculation_458241302262734848:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:Calculation_458241302262734848:nk]'>
            <groupfilter function='member' level='[none:Calculation_458241302262734848:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:Calculation_458241302262734848:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2_per_capita:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk] + [federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2_per_capita:qk])</rows>
        <cols>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{E8B3C157-BF2B-4429-8D10-9891D30E2173}' />
    </worksheet>
    <worksheet name='Sheet 7 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>CO2 Emission Over Years</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emission (co2_emission_analysis)' name='federated.1dkg6me1xmfshc1g3kuh21i1f30d' />
          </datasources>
          <datasource-dependencies datasource='federated.1dkg6me1xmfshc1g3kuh21i1f30d'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]' included-values='in-range'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#59a14f' />
            <format attr='border-width' value='4' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.93353593349456787' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:co2:qk]</rows>
        <cols>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{E9DB198D-88A4-4B1A-A706-2B10C32DCA38}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>CO2 measures in each country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2 new (co2_project)' name='federated.0iadx9u0zjyzps1fohv8z0p5h01b' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='country_parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cuba&quot;'>
              <calculation class='tableau' formula='&quot;Cuba&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0iadx9u0zjyzps1fohv8z0p5h01b'>
            <column caption='country_calculation' datatype='boolean' name='[Calculation_458241302262734848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]=[country]' />
            </column>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_458241302262734848]' derivation='None' name='[none:Calculation_458241302262734848:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[pcto:sum:co2:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:cement_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:coal_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:flaring_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:gas_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:oil_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:other_industry_co2:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:Calculation_458241302262734848:nk]'>
            <groupfilter function='member' level='[none:Calculation_458241302262734848:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</column>
            <column>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:Calculation_458241302262734848:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
              <size column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]' />
              <lod column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:cement_co2:qk]&quot;</value>
                <value>1135.5829999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:coal_co2:qk]&quot;</value>
                <value>13413.495999999997</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:flaring_co2:qk]&quot;</value>
                <value>13.927000000000003</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:gas_co2:qk]&quot;</value>
                <value>6258.4479999999985</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:oil_co2:qk]&quot;</value>
                <value>20677.480000000003</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:other_industry_co2:qk]&quot;</value>
                <value>290.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{670B9BC5-C6CB-4BF2-A9B4-6AA0564E8115}' />
    </worksheet>
    <worksheet name='Sheet 8 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>CO2 Emission in Year 2020</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emission (co2_emission_analysis)' name='federated.1dkg6me1xmfshc1g3kuh21i1f30d' />
          </datasources>
          <datasource-dependencies datasource='federated.1dkg6me1xmfshc1g3kuh21i1f30d'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]' included-values='in-range'>
            <min>2020</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-color' value='#499894' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-width' value='4' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0434806346893311' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#606b76' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:co2:qk]</rows>
        <cols>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{F8E86BDB-62C4-4917-A4FB-E96F204A3D90}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>CO2 and Ag CO2 trend over the years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2 new (co2_project)' name='federated.0iadx9u0zjyzps1fohv8z0p5h01b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iadx9u0zjyzps1fohv8z0p5h01b'>
            <column-instance column='[co2]' derivation='Avg' name='[avg:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[avg:co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0iadx9u0zjyzps1fohv8z0p5h01b].[avg:co2:qk] + [federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk])</rows>
        <cols>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{39046BA0-6A3A-48F7-92DC-66FF0FB7374E}' />
    </worksheet>
    <worksheet name='Trend of Each Co2 Emission Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:flaring_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:cement_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:other_industry_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:oil_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:gas_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:flaring_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:coal_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:cement_co2:qk] + [federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:other_industry_co2:qk])))))</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{6B7B0E0C-A3C9-49EB-9BE6-C27FB182BE98}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Comparison of India to other countries on the basis of Various Fossils of CO2 Emissions</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='border-color' value='#000000' />
          <format attr='border-style' value='solid' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='border-color' value='#000000' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='2' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Country Parameter' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Portugal&quot;'>
          <calculation class='tableau' formula='&quot;Portugal&quot;' />
          <members>
            <member value='&quot;Afghanistan&quot;' />
            <member value='&quot;Albania&quot;' />
            <member value='&quot;Algeria&quot;' />
            <member value='&quot;Andorra&quot;' />
            <member value='&quot;Angola&quot;' />
            <member value='&quot;Anguilla&quot;' />
            <member value='&quot;Antigua and Barbuda&quot;' />
            <member value='&quot;Argentina&quot;' />
            <member value='&quot;Armenia&quot;' />
            <member value='&quot;Aruba&quot;' />
            <member value='&quot;Austria&quot;' />
            <member value='&quot;Azerbaijan&quot;' />
            <member value='&quot;Bahamas&quot;' />
            <member value='&quot;Bahrain&quot;' />
            <member value='&quot;Bangladesh&quot;' />
            <member value='&quot;Barbados&quot;' />
            <member value='&quot;Belarus&quot;' />
            <member value='&quot;Belgium&quot;' />
            <member value='&quot;Belize&quot;' />
            <member value='&quot;Benin&quot;' />
            <member value='&quot;Bermuda&quot;' />
            <member value='&quot;Bhutan&quot;' />
            <member value='&quot;Bolivia&quot;' />
            <member value='&quot;Bonaire Sint Eustatius and Saba&quot;' />
            <member value='&quot;Bosnia and Herzegovina&quot;' />
            <member value='&quot;Botswana&quot;' />
            <member value='&quot;Brazil&quot;' />
            <member value='&quot;British Virgin Islands&quot;' />
            <member value='&quot;Brunei&quot;' />
            <member value='&quot;Bulgaria&quot;' />
            <member value='&quot;Burkina Faso&quot;' />
            <member value='&quot;Burundi&quot;' />
            <member value='&quot;Cambodia&quot;' />
            <member value='&quot;Cameroon&quot;' />
            <member value='&quot;Canada&quot;' />
            <member value='&quot;Cape Verde&quot;' />
            <member value='&quot;Central African Republic&quot;' />
            <member value='&quot;Chad&quot;' />
            <member value='&quot;Chile&quot;' />
            <member value='&quot;China&quot;' />
            <member value='&quot;Christmas Island&quot;' />
            <member value='&quot;Colombia&quot;' />
            <member value='&quot;Comoros&quot;' />
            <member value='&quot;Congo&quot;' />
            <member value='&quot;Cook Islands&quot;' />
            <member value='&quot;Costa Rica&quot;' />
            <member value='&quot;Cote d&apos;Ivoire&quot;' />
            <member value='&quot;Croatia&quot;' />
            <member value='&quot;Cuba&quot;' />
            <member value='&quot;Curacao&quot;' />
            <member value='&quot;Cyprus&quot;' />
            <member value='&quot;Czechia&quot;' />
            <member value='&quot;Democratic Republic of Congo&quot;' />
            <member value='&quot;Denmark&quot;' />
            <member value='&quot;Djibouti&quot;' />
            <member value='&quot;Dominica&quot;' />
            <member value='&quot;Dominican Republic&quot;' />
            <member value='&quot;Ecuador&quot;' />
            <member value='&quot;Egypt&quot;' />
            <member value='&quot;El Salvador&quot;' />
            <member value='&quot;Equatorial Guinea&quot;' />
            <member value='&quot;Eritrea&quot;' />
            <member value='&quot;Estonia&quot;' />
            <member value='&quot;Eswatini&quot;' />
            <member value='&quot;Ethiopia&quot;' />
            <member value='&quot;EU-27&quot;' />
            <member value='&quot;EU-28&quot;' />
            <member value='&quot;Faeroe Islands&quot;' />
            <member value='&quot;Fiji&quot;' />
            <member value='&quot;Finland&quot;' />
            <member value='&quot;France&quot;' />
            <member value='&quot;French Equatorial Africa&quot;' />
            <member value='&quot;French Guiana&quot;' />
            <member value='&quot;French Polynesia&quot;' />
            <member value='&quot;French West Africa&quot;' />
            <member value='&quot;Gabon&quot;' />
            <member value='&quot;Gambia&quot;' />
            <member value='&quot;Georgia&quot;' />
            <member value='&quot;Germany&quot;' />
            <member value='&quot;Ghana&quot;' />
            <member value='&quot;Greece&quot;' />
            <member value='&quot;Greenland&quot;' />
            <member value='&quot;Grenada&quot;' />
            <member value='&quot;Guadeloupe&quot;' />
            <member value='&quot;Guatemala&quot;' />
            <member value='&quot;Guinea&quot;' />
            <member value='&quot;Guinea-Bissau&quot;' />
            <member value='&quot;Guyana&quot;' />
            <member value='&quot;Haiti&quot;' />
            <member value='&quot;Honduras&quot;' />
            <member value='&quot;Hong Kong&quot;' />
            <member value='&quot;Hungary&quot;' />
            <member value='&quot;Iceland&quot;' />
            <member value='&quot;Indonesia&quot;' />
            <member value='&quot;International transport&quot;' />
            <member value='&quot;Iran&quot;' />
            <member value='&quot;Iraq&quot;' />
            <member value='&quot;Ireland&quot;' />
            <member value='&quot;Israel&quot;' />
            <member value='&quot;Italy&quot;' />
            <member value='&quot;Jamaica&quot;' />
            <member value='&quot;Japan&quot;' />
            <member value='&quot;Jordan&quot;' />
            <member value='&quot;Kazakhstan&quot;' />
            <member value='&quot;Kenya&quot;' />
            <member value='&quot;Kiribati&quot;' />
            <member value='&quot;Kosovo&quot;' />
            <member value='&quot;Kuwait&quot;' />
            <member value='&quot;Kuwaiti Oil Fires&quot;' />
            <member value='&quot;Kyrgyzstan&quot;' />
            <member value='&quot;Laos&quot;' />
            <member value='&quot;Latvia&quot;' />
            <member value='&quot;Lebanon&quot;' />
            <member value='&quot;Leeward Islands&quot;' />
            <member value='&quot;Lesotho&quot;' />
            <member value='&quot;Liberia&quot;' />
            <member value='&quot;Libya&quot;' />
            <member value='&quot;Liechtenstein&quot;' />
            <member value='&quot;Lithuania&quot;' />
            <member value='&quot;Luxembourg&quot;' />
            <member value='&quot;Macao&quot;' />
            <member value='&quot;Madagascar&quot;' />
            <member value='&quot;Malawi&quot;' />
            <member value='&quot;Malaysia&quot;' />
            <member value='&quot;Maldives&quot;' />
            <member value='&quot;Mali&quot;' />
            <member value='&quot;Malta&quot;' />
            <member value='&quot;Marshall Islands&quot;' />
            <member value='&quot;Martinique&quot;' />
            <member value='&quot;Mauritania&quot;' />
            <member value='&quot;Mauritius&quot;' />
            <member value='&quot;Mayotte&quot;' />
            <member value='&quot;Mexico&quot;' />
            <member value='&quot;Micronesia&quot;' />
            <member value='&quot;Micronesia (country)&quot;' />
            <member value='&quot;Moldova&quot;' />
            <member value='&quot;Mongolia&quot;' />
            <member value='&quot;Montenegro&quot;' />
            <member value='&quot;Montserrat&quot;' />
            <member value='&quot;Morocco&quot;' />
            <member value='&quot;Mozambique&quot;' />
            <member value='&quot;Myanmar&quot;' />
            <member value='&quot;Namibia&quot;' />
            <member value='&quot;Nauru&quot;' />
            <member value='&quot;Nepal&quot;' />
            <member value='&quot;Netherlands&quot;' />
            <member value='&quot;New Caledonia&quot;' />
            <member value='&quot;New Zealand&quot;' />
            <member value='&quot;Nicaragua&quot;' />
            <member value='&quot;Niger&quot;' />
            <member value='&quot;Nigeria&quot;' />
            <member value='&quot;Niue&quot;' />
            <member value='&quot;North Macedonia&quot;' />
            <member value='&quot;Norway&quot;' />
            <member value='&quot;Oceania&quot;' />
            <member value='&quot;Oman&quot;' />
            <member value='&quot;Pakistan&quot;' />
            <member value='&quot;Palau&quot;' />
            <member value='&quot;Palestine&quot;' />
            <member value='&quot;Panama&quot;' />
            <member value='&quot;Panama Canal Zone&quot;' />
            <member value='&quot;Papua New Guinea&quot;' />
            <member value='&quot;Paraguay&quot;' />
            <member value='&quot;Peru&quot;' />
            <member value='&quot;Philippines&quot;' />
            <member value='&quot;Poland&quot;' />
            <member value='&quot;Portugal&quot;' />
            <member value='&quot;Puerto Rico&quot;' />
            <member value='&quot;Qatar&quot;' />
            <member value='&quot;Reunion&quot;' />
            <member value='&quot;Romania&quot;' />
            <member value='&quot;Russia&quot;' />
            <member value='&quot;Rwanda&quot;' />
            <member value='&quot;Ryukyu Islands&quot;' />
            <member value='&quot;Saint Helena&quot;' />
            <member value='&quot;Saint Kitts and Nevis&quot;' />
            <member value='&quot;Saint Lucia&quot;' />
            <member value='&quot;Saint Pierre and Miquelon&quot;' />
            <member value='&quot;Saint Vincent and the Grenadines&quot;' />
            <member value='&quot;Samoa&quot;' />
            <member value='&quot;Sao Tome and Principe&quot;' />
            <member value='&quot;Saudi Arabia&quot;' />
            <member value='&quot;Senegal&quot;' />
            <member value='&quot;Serbia&quot;' />
            <member value='&quot;Seychelles&quot;' />
            <member value='&quot;Sierra Leone&quot;' />
            <member value='&quot;Singapore&quot;' />
            <member value='&quot;Sint Maarten (Dutch part)&quot;' />
            <member value='&quot;Slovakia&quot;' />
            <member value='&quot;Slovenia&quot;' />
            <member value='&quot;Solomon Islands&quot;' />
            <member value='&quot;Somalia&quot;' />
            <member value='&quot;South Africa&quot;' />
            <member value='&quot;South Korea&quot;' />
            <member value='&quot;South Sudan&quot;' />
            <member value='&quot;Spain&quot;' />
            <member value='&quot;Sri Lanka&quot;' />
            <member value='&quot;St. Kitts-Nevis-Anguilla&quot;' />
            <member value='&quot;Sudan&quot;' />
            <member value='&quot;Suriname&quot;' />
            <member value='&quot;Sweden&quot;' />
            <member value='&quot;Switzerland&quot;' />
            <member value='&quot;Syria&quot;' />
            <member value='&quot;Taiwan&quot;' />
            <member value='&quot;Tajikistan&quot;' />
            <member value='&quot;Tanzania&quot;' />
            <member value='&quot;Thailand&quot;' />
            <member value='&quot;Timor&quot;' />
            <member value='&quot;Togo&quot;' />
            <member value='&quot;Tonga&quot;' />
            <member value='&quot;Trinidad and Tobago&quot;' />
            <member value='&quot;Tunisia&quot;' />
            <member value='&quot;Turkey&quot;' />
            <member value='&quot;Turkmenistan&quot;' />
            <member value='&quot;Turks and Caicos Islands&quot;' />
            <member value='&quot;Tuvalu&quot;' />
            <member value='&quot;Uganda&quot;' />
            <member value='&quot;Ukraine&quot;' />
            <member value='&quot;United Arab Emirates&quot;' />
            <member value='&quot;United Kingdom&quot;' />
            <member value='&quot;United States&quot;' />
            <member value='&quot;Uruguay&quot;' />
            <member value='&quot;Uzbekistan&quot;' />
            <member value='&quot;Vanuatu&quot;' />
            <member value='&quot;Venezuela&quot;' />
            <member value='&quot;Vietnam&quot;' />
            <member value='&quot;Wallis and Futuna&quot;' />
            <member value='&quot;Yemen&quot;' />
            <member value='&quot;Zambia&quot;' />
            <member value='&quot;Zimbabwe&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='9' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97672' id='12' param='vert' type-v2='layout-flow' w='98792' x='604' y='1164'>
            <zone h='97672' id='10' type-v2='layout-basic' w='98792' x='604' y='1164' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='86317' id='3' name='India' w='39774' x='1585' y='10771' />
        <zone h='18341' id='4' name='India' pane-specification-id='0' param='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]' type-v2='color' w='10189' x='87774' y='14410' />
        <zone h='86317' id='5' name='Countries' w='42792' x='43396' y='10771' />
        <zone custom-title='true' h='9170' id='34' mode='compact' param='[Parameters].[Country Parameter]' type-v2='paramctrl' w='10642' x='87623' y='40466'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Choose any Country</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Comparison of India to other countries on the basis of Various Fossils of CO2 Emissions</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='103' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='102' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='86317' id='3' is-fixed='true' name='India' w='39774' x='1585' y='10771'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18341' id='4' name='India' pane-specification-id='0' param='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]' type-v2='color' w='10189' x='87774' y='14410'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='86317' id='5' is-fixed='true' name='Countries' w='42792' x='43396' y='10771'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='9170' id='34' mode='compact' param='[Parameters].[Country Parameter]' type-v2='paramctrl' w='10642' x='87623' y='40466'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000'>Choose any Country</run>
                    <run fontalignment='1'>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8E06A6FD-0375-4F22-AEA6-4D2F6A4906DD}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1 (2)'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
      </datasources>
      <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
        <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97672' id='7' param='horz' type-v2='layout-flow' w='98792' x='604' y='1164'>
            <zone h='97672' id='5' type-v2='layout-basic' w='81056' x='604' y='1164'>
              <zone h='48836' id='3' name='Co2 Map' w='39067' x='604' y='1164'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48836' id='10' name='Avg CO2 Emission of top 10 Countries' w='41989' x='39671' y='1164'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48836' id='12' name='Avg CO2 Emission Per Capita of top 10 Countries' w='41989' x='39671' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48836' id='14' name='Avg CO2 Emission Year Wise' w='39067' x='604' y='50000'>
                <layout-cache minheight='312' minwidth='178' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='235' h='97672' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='17736' x='81660' y='1164'>
              <zone h='10043' id='8' name='Co2 Map' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='17736' x='81660' y='1164'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9461' id='9' name='Co2 Map' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type-v2='color' w='17736' x='81660' y='11207'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9461' id='11' name='Avg CO2 Emission of top 10 Countries' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]' type-v2='color' w='17736' x='81660' y='20668'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9461' id='13' name='Avg CO2 Emission Per Capita of top 10 Countries' pane-specification-id='2' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' type-v2='color' w='17736' x='81660' y='30129'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='83' h='13246' id='15' is-fixed='true' name='Avg CO2 Emission Year Wise' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' type-v2='color' w='17736' x='81660' y='39590'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='107' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='106' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='10043' id='8' name='Co2 Map' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='17736' x='81660' y='1164'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48836' id='3' is-fixed='true' name='Co2 Map' w='39067' x='604' y='1164'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9461' id='9' name='Co2 Map' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type-v2='color' w='17736' x='81660' y='11207'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48836' id='10' is-fixed='true' name='Avg CO2 Emission of top 10 Countries' w='41989' x='39671' y='1164'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9461' id='11' name='Avg CO2 Emission of top 10 Countries' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]' type-v2='color' w='17736' x='81660' y='20668'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48836' id='14' is-fixed='true' name='Avg CO2 Emission Year Wise' w='39067' x='604' y='50000'>
                  <layout-cache minheight='312' minwidth='178' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='13246' id='15' name='Avg CO2 Emission Year Wise' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' type-v2='color' w='17736' x='81660' y='39590'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48836' id='12' is-fixed='true' name='Avg CO2 Emission Per Capita of top 10 Countries' w='41989' x='39671' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9461' id='13' name='Avg CO2 Emission Per Capita of top 10 Countries' pane-specification-id='2' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' type-v2='color' w='17736' x='81660' y='30129'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{08E5DA5F-D7E5-4C61-A17B-7F19EAE61D93}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Change in CO2 Emission And CO2 Emission in 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='2' />
          <format attr='border-color' value='#000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='co2_emission (co2_emission_analysis)' name='federated.1dkg6me1xmfshc1g3kuh21i1f30d' />
      </datasources>
      <datasource-dependencies datasource='federated.1dkg6me1xmfshc1g3kuh21i1f30d'>
        <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
        <column caption='Year' datatype='integer' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97672' id='27' param='vert' type-v2='layout-flow' w='98792' x='604' y='1164'>
            <zone h='97672' id='25' type-v2='layout-basic' w='98792' x='604' y='1164' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='73362' id='3' name='Sheet 8 (2)' w='38717' x='679' y='8443' />
        <zone h='72780' id='4' name='Sheet 7 (2)' w='58792' x='40377' y='8297' />
        <zone h='10771' id='5' name='Sheet 7 (2)' param='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]' type-v2='filter' values='database' w='17962' x='47094' y='82096' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Change in CO2 Emission And CO2 Emission in 2020</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='80' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='79' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='10771' id='5' name='Sheet 7 (2)' param='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]' type-v2='filter' values='database' w='17962' x='47094' y='82096'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72780' id='4' is-fixed='true' name='Sheet 7 (2)' w='58792' x='40377' y='8297'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73362' id='3' is-fixed='true' name='Sheet 8 (2)' w='38717' x='679' y='8443'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1A04D5A3-472E-4F45-BA89-1D4B0EAF4A84}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Unearthening the environmental impacts of human activity: A global Co2 emission analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#fff081' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='background-color' value='#1b1b1bd9' />
          <format attr='font-family' value='Tableau Bold' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='font-family' value='Tableau Semibold' />
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='story-title'>
          <format attr='background-color' value='#00000000' />
          <format attr='font-family' value='Tableau Bold' />
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97672' id='1' param='vert' removable='false' type-v2='layout-flow' w='98792' x='604' y='1164'>
            <zone h='4803' id='3' type-v2='title' w='98792' x='604' y='1164' />
            <zone h='14702' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98792' x='604' y='5967' />
            <zone h='78167' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98792' x='604' y='20669'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Level of Co2 in all the countries and continents all over the world.' captured-sheet='Co2 Map' id='1' />
                  <story-point caption='Distribution of Co2 in all the seven continents.' captured-sheet='Continent Wise Pie Chart' id='3' />
                  <story-point caption='Trend of Co2 over the years' captured-sheet='Sheet 7 (2)' id='6' />
                  <story-point caption='Trend of each Co2 emission category.' captured-sheet='Trend of Each Co2 Emission Category' id='2' />
                  <story-point caption='Emission level of Co2 due to fossil fuels in each country.' captured-sheet='Sheet 8' id='8'>
                    <capturedDeltas>
                      <datasource name='Parameters'>
                        <column name='[Parameter 1]' value='&quot;France&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Extraction rate of Co2 over the years. Average trend line of the graph helps to predict further emission. ' captured-sheet='Extraction Rate over year' id='4' />
                  <story-point caption='Comparision of Co2 and Co2 per capita for each country' captured-sheet='Sheet 7' id='5'>
                    <capturedDeltas>
                      <datasource name='Parameters'>
                        <column name='[Parameter 1]' value='&quot;India&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Average Co2 trend over the years.' captured-sheet='Avg CO2 Emission Year Wise' id='7' />
                  <story-point caption='Co2 emission due to international factors.' captured-sheet='Sheet 11' id='10' />
                  <story-point caption='Co2 emission over the years and in 2020' captured-sheet='Dashboard 2' id='9' />
                  <story-point caption='Comparision of Co2 emission due to fossil fuels in India and other countries.' captured-sheet='Dashboard 1' id='11'>
                    <capturedDeltas>
                      <datasource name='Parameters'>
                        <column name='[Country Parameter]' value='&quot;Uganda&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Average Co2 emission in top 10 countries.' captured-sheet='Avg CO2 Emission of top 10 Countries' id='12' />
                  <story-point caption='Average Co2 emission per capita in top 10 countries. ' captured-sheet='Avg CO2 Emission Per Capita of top 10 Countries' id='13' />
                  <story-point caption='Contribution of fossil fuels in emission of Co2 in all countries.' captured-sheet='Sheet 6' id='15' />
                  <story-point caption='Co2 vs Avg Co2 trend over the years. ' captured-sheet='Sheet 9' id='16' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{93CD3483-84AE-4CEC-825C-0FCDB99F30CB}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' maximized='true' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{839608FB-62DE-4D9D-8EA4-4BFE4E8411E3}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Country_filter]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:Calculation_458241302262734848:nk]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{42565025-DD65-491F-B5B8-B2CD0A97BE2B}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:Calculation_458241302262734848:nk]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{55067689-07E0-48E9-9A31-69B2EA165133}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:Calculation_458241302262734848:nk]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D6B41E88-856D-4BBA-856C-D07ED8119DDC}' />
    </window>
    <window class='worksheet' name='India'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]</field>
            <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{47E0F29C-806D-4252-9C35-2B92C1028D66}' />
    </window>
    <window class='worksheet' name='Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Country Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]</field>
            <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:Calculation_661184761098993666:nk]</field>
            <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{264F3484-FACE-4A0B-A2DE-7E19647C53F6}' />
    </window>
    <window class='worksheet' name='Sheet 8 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E3A6A4D7-3D6A-43FD-949A-930CF0C3B880}' />
    </window>
    <window class='worksheet' name='Sheet 7 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D640BA44-C31E-445C-879A-4E76D9F5B9CD}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='India'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0085BE36-15B3-4A03-9E6A-3C6BF39572F5}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sheet 7 (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 8 (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1F2894F7-CFFD-41D6-A12A-7C039A26AE91}' />
    </window>
    <window class='worksheet' name='Co2 Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9BE5F415-1BBA-45BA-BC14-8C13885CB348}' />
    </window>
    <window class='worksheet' name='Avg CO2 Emission of top 10 Countries'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{814033C8-F0A8-4B5C-92C4-AB727A5C371E}' />
    </window>
    <window class='worksheet' name='Avg CO2 Emission Per Capita of top 10 Countries'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6F21A55-8BCD-47E4-920F-2941BC003AEF}' />
    </window>
    <window class='worksheet' name='Avg CO2 Emission Year Wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{037B2DAA-8798-48B6-A398-86367DFB07F1}' />
    </window>
    <window class='worksheet' name='Trend of Each Co2 Emission Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F631E510-9FE2-4826-AD16-982A48F87321}' />
    </window>
    <window class='worksheet' name='India vs China in each Category'>
      <cards>
        <edge name='left'>
          <strip size='180'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{977029CB-0572-4098-8925-69E5A3F704A2}' />
    </window>
    <window class='worksheet' name='Continent Wise Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[:Measure Names]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14123B21-4A90-4895-A68D-33A3A1512007}' />
    </window>
    <window class='worksheet' name='Extraction Rate over year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDB9B167-C499-43D3-86AE-5350C99E1389}' />
    </window>
    <window class='dashboard' name='Dashboard 1 (2)'>
      <viewpoints>
        <viewpoint name='Avg CO2 Emission Per Capita of top 10 Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg CO2 Emission Year Wise'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg CO2 Emission of top 10 Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Co2 Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F9E519ED-CC8C-4D87-98B8-A633C263EDB2}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D514D6A8-5538-4D87-80FC-453AF2AA3376}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{DFA62F89-CCE6-40A5-939C-7647D1ED037A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='240' name='Avg CO2 Emission Per Capita of top 10 Countries' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Avg CO2 Emission Year Wise' width='240'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Avg CO2 Emission of top 10 Countries' width='240'>
      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
      mmf9ef1/0S76yZn0MDkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Co2 Map' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Continent Wise Pie Chart' width='240'>
      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
      iKUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Countries' width='240'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Dashboard 1' width='240'>
      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
      r/o8ALFw3OYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Dashboard 1 (2)' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z5BdyXWg+d377n3em6pX3lcBhYL3rj3Z3dOiEa3IGSq0s9KEVpofG7Eb
      io2Y3Qn93JjYH7uxsTPSaDUaLUVSpMgh2d3sbrZvoOF9WZRDefPqeW+u2x8FFFCwBdcAqPoi
      EIF612Xemyfz5MlzTgqGYRiss846zyTiky7AOuus8+CsC/A66zzDrAvwOus8w6wL8DrrPMOs
      C/A66zzDrAvwOus8w6wL8DrrPMPcVoANQ6eQz1EqV7jdKrGuqeRyORRVW/VboVha+VtTFQql
      8qMv8TrrPAC6plAqV+77Ok1VyOVyqJp+9T43t30DpVIml8+j3yAslXKJbDZLNpulXFHvUi6V
      inLn48uP0ClXlNseuo0A63z6/rsMDo8xMDiEquurK1TOc/TzzxkfH+ftX/+KTGm5IkvDJ/h3
      //t/oqQuV+LUR7/iP/zHH969YOus8wVx5qO3+L//7mfo9+G2VM5Geee9DxkfH2fkyhRqKcNb
      b77N2Pg47739JvG8QnRmnJNnLzF6eYB3PjjCtdu/+U//H4Ojk0xOTpLK5u/4jEJqkeGJxbsX
      pJLj/MDobQ9JN/+Qmuql7GnnxR1dABi6xrmTRykq4K1uYFNHE8899zwCsDjeT6ak4raaQBDY
      saGBoakltrdVsZgzaAs5AJWLp8+SryjYvGF29NTy63/6iKpaP4bZzf5dWxCEtbzOddZ5UHQm
      4hW215hZylWwZSeZKnnZ0hrizMlTbNu1k3Mnj2GYrJRUgRcP7wXgyCdHOPilr+G3LYvJpSNv
      07n3FTbWOtncUc0vPzrON944zOGGdtRynr6fvYUBCIDJbKN702ZcluUSDJw6TlqSycdiuAPV
      KPkUwcZumnwmdL1CNj7P6UsjWGQrO/fvZuzSGTIlHXcwzOauGsSyAobG6eOfUzEE/DWtdNQ5
      bx2BI3OzVNXUrPwdn+ojZari0OFDjPWeRRMEDK3MWz//Mea6zdR5LSvnNm/axvRQH4XoOM5w
      19VfTbS0tWA2Wzhx/HOgQsWwsf/gQUpL40QL96/WrLPO/VCMTSF56tm1vZMTZwZwVzVw+fxJ
      tEqO2UiKuaEzGL5W9u/fRyIyu3JdqlTBZb4+xi3FsgQDTgBM9mqoRBFFkVRkih/+6Gc896VX
      VwRKLec5feo4x48fZzGeZWl2no6tO9nRFiQr+Ni/ZweXBwdQyjkWYynG+i7ib97AoUN7sZrg
      Yv8Ie/btp6ezBVCYnY0wP3iCiqeDgwcPc6X3FMVy6VYBrm1qZn5qcuXvciGP3ekCBMyCQEVX
      +Mnf/z2bn3uDF/Zs4cbBU5CcWI08J86PsvPqCJ6PT/P+sX627dhBtc8FgCiKy/czSStzi3XW
      eVxcOH8Ok1BhcDbLzOWLYLLiMav0njtNy9bdpNMZggH/LdcF7BYShet2nNqwl4XFFADl1DSi
      vZZcbJqfvP053/vBH9Ic9q2cK1kc7Nl7gAMHDhAOuAAR0SQgIKy0f4Pr+vy2576MnJ7hnbd+
      zXyyzDe+9jqnjh3hnQ+PrJyTz2VxedwIAkgmAUUzblWhXXXduAff48jnGSTZyo4tW7jw/kd8
      HgtgCtSgLU0SKYjMjw8yP2Fi89YduGwygiAiAls31vOTT8Z5ySphMpmQZAtqMcW5s2dZSuUA
      WJge59jnMhmTm2qX5eYirLPOI8MwdBazAl/7xouYBAElFWMxW2FHTxv/zy+O87/9zy9T8W3j
      rfffJ9FYTzxTXLn20Isv8O5H7xMKBnD5q+ne9RzvvfcBmdkQiViCV157nbPv/ojq+hbOnzmF
      1eVne88GBAEMpcSZU8exStDQ2oUoigiAIAiI4vKwZxLFq3+LLExfIZWvYBIMVLXC4JURRElC
      y5cAAZNJpHXbPt565yOyU15kbz0Os4jwxUcjJfnFz8/zzW+9/MU+dp117oBSzJFTReymCu98
      eJLf/+prT7pIa+YJCHCZqakETU019z51nXW+ADSlxNDgIPkKbOrpwWkzP+kirZknIMDrrLPO
      o2LdE2uddZ5h1gV4nXWeYW6xQheLxatm7gcnurSEEI+Q0MBsd1BOJXD6/DicTpR8Dm9dA8OD
      A6jlMgGrGVuwilylgl4sUCkUCDW1YLFa0TUNSZaZnpyko6sLk8m08ozY/BzpeIyCquH0ePEJ
      Om7rw89dpuIpFLOVjo4OhKfEwySZSDA3cpkqWcQigtHYjjcQvOU8wzBuKXO5XGJkeARD03Aa
      Kg2m5WW7a2cZwFRRIdyzFafTtabyJOIxrDY7siwjy/LDVO2xYBgGVqv1SReDUqlEOp1+rM+4
      RYBFUcRiebilHbPZzNBSnGwuRywapU1UsXg8TDe0kR3qo2K1I4fCjJw+webqAIq/GtEXoCoU
      ZKn3PLLLQ0NTE5G5WdLxGDhdCIKwqlz+cA0lVaUhXIPD4eByXy/FyTHqvWtrhLdDNww8uQKL
      3mosFstTIcBLM9PMv/mPNBll5u0+3PtfpKE6vKozu8bC/DwOhwO3x4NhGMSjUS799m38CxOk
      NINmpxnRtLpzFgAtX2HB5aVnx857lufs6VPYz3zClCpS5/cR2Psc1a1tmEymp+J9AZTLT4cP
      vtVqfewdyS1GrHK5/NACfI1sNsux37xFKRrBKpsIO2z4bFaiSBi1jbh8fiLHP2VSFei2iiQ9
      IQ7IKpFcnnixTHeVH4vJxPm8yt5vfOeez+v77CM2mHmohnR0ZIKoIPHCq69TVVX1wPd5FMxM
      TxN7+6fU6SVi256ja/+h2wruNYaHBuno2kClUmHw0w/xXz5HSBbv+T6iZRXp239MXX39Pct0
      4ewZgsfexS+LFHWD6doO5iNL1DQ00LzvMIHgrZrBF82jbMNPO7eMwA+LYRikkkkqxSJVtbW8
      9I1vMTp8mdKlM4jheuSujXS63FjtyypYIBCgOh5nvvcC1fX1XBgfppApUOuwci6SIOR0UHH5
      b6se3kzzjt3MHP+URo/zgcsfdNox3EGczge/x6NianSY2kqBgeoWXjj43F3rn81k6NrYTTaT
      4b/8zX/mW6Y8PvOdhf0aCc1gMtjIoZq1Lett3bGT/nSCuM2BZDbTvWkzzbks0+fP4HA41ly3
      dR4Nj1yAc7kco2//gmavi/PnzLhq6ti4czfx6jDBUAhBENB1HVEUUVWVWCyGpqm0bNtBMRoh
      sHEz21vbSKfTdAQCAGwwm9c0qkqSzHwm98ACXKoojMaSHNj7HHa7/YHu8agoFAoogxeZN9nY
      97Vv3bP+TpeLUrFINBqlqbERaWHons9QdIMBXz1ZzUBRlFtG95s7TcMwmJ6aYsvLr3Ly2Ods
      3tCN1WbDarPhf/WNB6voOg/FIxdgQRBwWMz4rRb8wOLMGAOSTM+27QiCwOTEBMOffcTml75E
      NBYnc/4k+ALEKxUO+B1cLuRYVBUSg5c4b3YQqBQo6FAVDrPxxS/d1WhitVrxNLZg6IX7UqN1
      3aB3Zp5UuUJtbS2BJ6w6A4z091NdyVHa8zK2mzoTVVUZG+ija8s2FhcX8fv9FPN5xt/9FUIi
      wka1gtN8d0PkbElhtLoNMbpAs1ri2I//KwG9Ahu3sWX/IS5fukBlZAA9UM3m515EvtqJNjU3
      A1CMRjj1D3/Lc3/850jSI29G66yRR/7mI3Nz1NmXJ+6L+RKj8RTO3DlORRYpiia0TBq5Ukay
      WFmYGCdklrk0OcWG6hCXYmmqD71I9uxx8oKEHplnZ0cT700uEJmZwTo+TkdX1x2FUxAEsDlI
      LMUIONeuzimaxvmZBbLFEn/0L772xC2rqqqi9p+haHWxc+++W47PTE7Q997bON0eFqNRrFYr
      A329hJdmqLWY4C7z5GssljU2RK5QbTEhyCJqIYosCixdPEbvxAh6PkunmoPYFCOyxKbnl11f
      BUHAMAyae7Yw73CSjMcJXu3wnhYj1j8nHrkAZyILNJhlMuUKF8oGrzUuW4tFPU80W+JSLMXe
      cABVUWhpaqJq0cAiSyzKdmo2b8VkkqiSRBZKBRo8LrLlCoPzi7T5PbjOnyRfX3fX5Q5FUbDe
      pwCqus5Xtm7g6OT8w1b/kRCPLOItZim392A237o0lh0d4g2XwPDYMHNLMUYunKcr6CFS00Io
      NoUs3luQdnlWW0flq5dUCRpVmasB5oKAZhgUyhVUVUXXdcxmM4V8nqmf/5DdLpn44EkGArWI
      9S1sfP7lp06IdV1nbGzsiUyJRFG8q9HxUfDIBbh92w7GP/ktRc2gvrmFTy+dZUc4hMdmod7j
      pKzreG0WJqMRunbu5uQ7ixQcFsTEEkoui2y1ka4otLgcFFUVt9XCv927lVy5wnQqw//7V3/N
      t7/9LWobm27bWBx2G0d6Z2jxuthQszZVeCwSRdENtoSDlB7xEoRhGOi6vhJ1shaSkUWyhSLW
      ZOyWeWgmlcQ5N05R01mansKdz+ColOlQYwyoEgOlCtsecYRXSVUZvnSRSiKKrJQpaAYB8/Ky
      UVA2EcxEGD43z0JTC7UtbSv1vZcwG4bBwLkz2ESR1u0773l+KpHE4/PeVydhGAZOp5Pa2to1
      X/OwXPvmuq6jadq9L3gITH/5l3/5lzf+oGnaA81pDMOgWCwuW28DVbRs34XD7WZhqB9ZktB1
      A7ss4bdZEIC5YgVXVRh/XQPuQIBwcpFsqUjLjt18fvYcrQ4LDR7XysdyWGT8disWTeG3J07j
      8bgJVlff8jEDwSCT09NMRqJsrAqsqREdGblC2ebCpFYoyRZq6uruu/63Q1VVjh87xtu//hV9
      ly6haxrVNTX3FGRPMMTFuQjGzBW0QDW+QHClHr0njtGwcAWLSWTCZGdDJY2h63gkAZOhU1B1
      qi2Prl8WBQFSCZRYhPbIFfzpKKH0Ej5ptYAGZZH4yCCzc3PETn5G5HI/5uo6bI47GxSLhQKD
      Z07h8fvx19Te8VslYnFO/+ObnPy//o7E7AK604bd47rj2vONbdgwDPL5PC7Xg/sH3I1kdJ6x
      iSlsNhvRZIb44jxOnx/JtDz6SpL0WP+tWYA/+j/+mthChLnxCXz1NUhX1VRd18lm0pz+/Cij
      vRcRLVZEkwlZknC6XMRSaZRSkel0lnqHDVFc/vDOSpFTfQPUdnQSi0axxiMohTx5l4+m1hY+
      6xskkclyeSnBZDrHVK5Iu89N2OWgUChwrq+fmsYmPF7vqnIWCgWmzp9BrVSodjuxm++uThcq
      CjOJJDVuJylM9Ozag81me6iPahgGp06d4t133mF+ZIjN1QHMqkJkdgasNgLB4F2F2GQy0dG9
      ieodeymWygwcP4qvpgaz2Uw2lcYxM4okCEx7w9TlE9RZTEiCgNMkEDI/eocKFzp+rbxy3zuN
      rm7BIJBL4FdL+IpZJgtl/C1tK6PQ1Pg4M+NjKJUK+XwOh8tFx+atBGrr7ljm8YEhjv37/xM+
      u4Q3XcYYmmLq6BkG3voQa8BLoLXxlmu+SAEeGlgeoGSzlZGBi7jCrYQ8q+0vhq6xtLhIWTWw
      2yyolRKRpWVvtnIhS6GiYZUl4rEogmxGvg+1e80CPPHv/4ri55coHuuld2EEQ1DJaTpH3/wl
      trkJbJkEPS4rA0NDZKeuwNwk0VIFl9uNHl9ik9eJRTJRqCj0LiXIlEpMlDRsdjtLZ0/QX1Tx
      CAZnh0dp27iJpq4NKFNjzCoG/o09LOWLmColQnYrDV43F2YXwWanta19VTkFQSC5tEhJtlJn
      kbBb7u5eaZZMdIZD2M0SgY2bqa67tzPD3dB1nbOnT3Pk/fewqxW+u2cbFUVlY20V/SOjCKP9
      jC7Fcbk9uDyeVdeqqkrvZx8TqG8AQJZlHE4n0+NjaB+/yfTsHIrTTX5+Fr+gM4IZuZRH1nUs
      Vz2snqY5aCEWZerCWYq9Z5jrv8jIzByO6By+vhPoQxdZGLiE5gvh8gdue325XObkf/gbnAMz
      mG5wN7KUNey5CsGOFnzbNtxy3Rc6AifiNLe1EZmP4AmFKKQzVFWFVuV5y8fnOH7+Mj6/H6/b
      STK2yPzCDENjC4wP9jJ+ZQZJyDEVSeNwunHa1j4FWrMAT/7wLXRVRQCkJg87a9xMXR5kq99F
      2G4l4LAhm0SanDbqHFa8sgl3NklsZor5ssZSWWVWNbgQS1FSVPS6Zhra2snnciixRazVtQT1
      CrJSIT55BXOgCnc6hiFJtO3YTV19PZ/1DeJEp8php1BRKNndtLW3rxrNTCYTjkCIpckrdAfc
      d23Q0/EkiqYzX1Ixd2yirqVtzS/udhiGwfvv/5Z33n6bPc31mE0is4kUDouZgNOBKzrPFreF
      hnyCykgfS7INX7iGbDZL79HP8ISqyGYyJBcX+OAXP8OklJn95LfY0jFaqRDMJ8nNTBJ3+alT
      CpTNNgqIDGWKtFnu7XH1RSIIAm7RIISKx1AJqCX8xQy2SgmfJGAVBby6wsWzZ1DNVny19avK
      Pzszw2/+9f+CazzCnWrl39n9xAU4EPQzPT1Pa3sbDruTkM+JLshIphvXz3Vmp2eYXYqzob0V
      iyxy9tRpAvUBzEItDTaDgdk5dF0hnirQ2rj2KdyaoxZWeVwaIIki28JBPNbVPsM3qlcmUaDd
      50bQVCyhKiqVCnORKHurvFRnYlgKWUjG8Ftk9Mg8rR4nu+uq8NttDJ87TY3Tjtthp6qqinI+
      T7fTyqAmUVAUDrXUI82M89/+8SdUKqsT440ODjA5NnpLStwbKasqUbsXfeM2Ol5+jZqm5rW+
      ijuSy+UQEKj1uNhUF+b1rd0EXQ62NNZiN5upuLwIgCwKeAUd7+fvcvHNnyPLMqXLl5gaHqI4
      NUbt6Q94UchT13uMTeUkXVp+5b22SAabs0sA6FY7Pl3BoilU7idf6hfEzaq2TxIJmVaX04JB
      8OzHDL79C1T1en7kUFUVDa8fxnh6+qTbIprMdHS0I0sSDpsVq8OFRV4tVkq5hCEIiKKJxcV5
      FmZnsDjd5FIGydglLkaTbNvQRKmoYDbfnwHysa3AX1svBHi+JgBGESPgZHZGwCqZ6LTboJAA
      KyiyH082h0kUMQGtDgsmpcxCNo9JsiJJErVNTXj9PurTaYzxfnTDYFtNFSOxBH/7V/+JP/qT
      f7MydzUbGv/ywC6ku8wzJwsVdr38+ioz/43WU1VV79tB32QyoUQX2dFUR43XDYDTaqGsqJgl
      E6qqkFJ14qpOi03CZhKwzowvO9+brZTmpumITGAWBczinedBCUUlWjCo1Nhp18s0+W13HKWe
      BcwCBCeHeOdvI2zcvIW2fYewWCxs/fYbvJuMY/rkEr78PZKfP8U4/TW8+moNYDA1PUtT20bq
      2zZePbp75byWrh33fe/HIsA3LpncaEYXBIGvdrdjvmmSLptEmnzL88FEYTmccUHROTs+wX//
      p/8DoijidDoxm80kT3yKw2Unli/w9mwcn17BKZhWqdFmqw3pNpnsdd1gfClGwSTTsPvALcL7
      y5/9lNqaGkrFIg61jOQNsP3goTUL8dnTpymmEuzbuDwv1w2DVLFESVWxyBJY7XjKFWYcPiZ7
      dmIszpA1BCr/+LdUKWXq51MIa1jDDZhNRHSD1pkhrNKzLLqQ0gyGytBhFuguxBBOf8JssIr4
      fIz+v/05li1tpO3SMy3Aqm6gXdWQwrV1lNW7Z2KVxeuJ7+7FYxHga+tgt8vW47qDUenaeqfT
      bObcYoykarC7qX55GQMYPHWC0tIiPmO58m6LhdpggCICmzdsXBV90rhhIxffe4uNVX7sNzhC
      XFhYIrxzP221tbc4SGiaRllRSI4Pc7i9GbPkZHhxllKptCardLFYZGF8lLaQH499+fyJRIaq
      PYcZvDzAfpt1eXQHPLkUFYsVz+adaJ/9lg69CCZgjeOoRRTZ/mRdtR+aim6QUTVMLg+e177G
      laFL1M+N0t+2k0MtbQydvkRgKoFpIo5derbzTpyfSXNxLrvm81/pCtAaWP2BM5EJhiI6e7e0
      kVma5di5fjZs3f34VOgHSbVlGAZ5RcHj8yHKNjZR4vxv32bXG18nn89TEExMpwpU262IgsA+
      h4nPSgJbtm5ddR+Hw8lYKk9nYPUSU0myrPjy3owkSWzfuYt071msskQsX0Sqb1lTPKemaQz1
      XqTeIq7Kc61JEjZRoNO+PNLbXW4K+QRVEvRe7mcpMk+zoMA9/JZ/FzEJMFDU2faDH1BTX0+5
      pZW+UyfYtLEbk8nE4d//PQaDQSqVCksfn8Z8duxJF/mB0XRQtLXLw82iY+gK5/uHUaUA0Mbo
      lSs0tjQxPnT+6Uqpo2o653MKna9/DXMgyIQziKW2iXK5jG53sPeVL3P469/kTDTNcDTBp5Pz
      FJOJWzoLQRDYsXv3KrU6Uyzhr72zdU8QBFpbW6k/8Dwjog1p8y669+y7p/qs6zrv/OY3LPRd
      RFU1tjTWous6g/EMOXeQ8uVeAo7l3jTocZE0BGwmke2JaXZKCnW/48JrGMbKvxsxCQIHXDLp
      heWdECxWK7uef5GJ4TE+/KdfYnc4aNq+mVwkhjgVeRJFf2qYH+ljIZ7mXO8AumEgYKCrGgbC
      4xuBb+TmkLTbYQAnl5LseOPrWK1Wdu8/wJXLQzgrFRKJOEImxeip42i6TsPBF8jPTuESZqhq
      brutU0THph4uvTPOlpCMIAgsFsp0Hdx+13JarFbqG5uob2y65VgsFiOdTtPWdn2pyTAMfvLj
      H2PPJHhj60YGZheQTSZShSK2jk2Ycllafe6V882SRFFf3j3HLAqsVWV+FsmpOgZQQeBCReRl
      2w2aiWEwL1qptHbisKzWcPYePrjignjsP/8I+2/P8+ST4zxZ6jbs4HudPYxOROi7eJHaunou
      Do7R0tmzdgEe6vIRGIsSyGtgLBtoxDUad67FAN+NSKHElje+TiAUWvmtpWt5ja9YLJIY6meD
      UcQARgcuYN+whf279hCLxW87SkqSRMOeg5w+/hm1dgu6LD9U2Jvf718JWF9cXCQcDqMoCgsT
      43x5YzuCIKBoGpquU1A1glVVzORzFCoVbGaZaDZHYmSILpt0z3fxLGMYBnMWN9Xf+T4XPvmQ
      QF0D7eePUjF0CpqOKogkevazcd9BrDfZFsrlMrIsI4oiiqKQ1RU0i4ijrK+oigaQdEoseWS8
      bpnWL7yGTwjRTEdbA5VKNWazmdcalgeSNbfott97iYDLTfbCMPO5OG/3jrC7uRabWcZru3sf
      uZYGmzEEGm4QXrg+clcqFZyBIEIphQC0yHBpcZH6piaGTp+krq7utiGAVeEwod//DudOncJs
      Nj9Usj5RFLHZbMtr2XNzhMPh5cYmm6nzeVjKZFE0DZMoEnY5+OS372AKVDG0GMNltWJY7dgU
      nQ75d2fU1QyDvKajGVAUTMiGjg64fu/reIIheg6/QPTnf0/cHSTd2E5zRyflRJz25pZbhBeW
      24miKFgsFkYu9VHT00XEAMun/ZivbltbdMhkD23AOxPH0hj+gmv8ZHj3+ABvf95/22NrFuDX
      X399+T+HDqJpGr2nz/LDn/4Mt0Xmj1+4+5rrWrAYOhPDl1dG3Rux2+2IyRhc3eZRQCAzO8mE
      20WzWqD/wgW279lz2/sKgsDOvXsfqmyw3LimJibo6+vjK1/72sq9N3R1YQDDmoTl6rLUyFKc
      UFsnPVu28LOf/JidPjsnL4+y2yYAT5/DxYOQ0QWS2w9jr65FlCQcsszl/n58Fhmvy0Uhnyf2
      zi8oIkBjB/uefx5BEO4aKHKjtb9753a6d25n6WCEj42/R03nsAzNoDeF2P6lF9i4qRvHU5D2
      6ItgciHBp+dvvz/wA0mdyWRi2749bHnxOcYLBS5MLzxUAQGanDayg71EIpFbRmxVVVFrGyko
      y2u7sknkOZ+d4NQwLX4PY2dOUCqV7njvtYS23Q3DMBgdHeXTX/0CSz5NOpVaOfbCq6+SaezE
      F67BZF9210trUFEVUqkkjbU1nJ2YwaRrSE+Rq+PDUNR0cntfZsOB52hq76ChuYWaunpefPU1
      tr3wMpIsMfyjv6GhmEQ3W9izf/+a37+maZTL5ZVvVlVdzR/85V+w70++B+EAsUYfyVj8n43w
      3osHHjYFQeD5F14gEAzw4egU04nUvS+6BzWihnH8Iy6//xuKxeu7xB09cgRDtpAqXo/VlU0m
      vDYLJkGg021nYmLioZ9/JwRBIBQKIVssmMvFVY3HbneQy+UZPHWCvM1JslCiIEj0bN7C9Ngo
      pqV5mgJeqgIBZovKAy2vPU1ohsFi+1badu29o1DOnDtNu5JddugpFakotzrV3AlBEFY5/+i6
      zujAIEd/9mu2/8Ufs+OFwzz3yksPXY/fFR5K73V7PHz3e98jXVE4Njbz0IXxWi0E7FbaqTD7
      2zcZOPop0+PjNLe0oMxMUOO6fZqczqCPseNHGBkefiwCYhgGlwcGyFcUvCaByeHLq44LAizE
      4gz0XmLM5ODAq6+jKAqT4+PU+zw4rVYMQG3qZLL04AHeumEwVVA4UxIYLl+v5xfZJVy0BrC2
      dy8/9w7vWosuYrrqSit0b8fhcDA5Obmm4HZRFFeyZ6RTKX75k5/y8QcfcuAPvk5jWwv7Duz/
      Z5Mydi089DJSe3s7+w8fojw/TTRXIOR8eBchQRBotslQSHB5SsFeW0+HoCAIt4/tlUSRV+uC
      XDx1hBmLmYam5kcamXPm1CmKVy4TDgbIWi2Yhi6Rb2nF4XCQTCbJZrN0um0Iskxifpbp9yPo
      lTK1Sp6+ySTVfh9bm+qRRJGz0Qiqlkdao6scLC/JXFYEbF4fjS1h2h12xhajfDQxQa3DSqVc
      Zqv90aVuySoaGUUjaJFWwhSvoUcXOfP+OxDfyXxJ5fALL9xyvWFf1lCGHUHadi+vpdfX16/4
      l98LwzDovXQJpVLh4EsvEK6pwTCMh94x5HeRhxZgQRBwOZ3U7trHrz/+gH+1vRurfH+3vTHw
      4WaWrozh8/ixKiqOuwTnC4LAlpCPS5fO0/AIIotuRNNU6r1uhrMlPJUC9W4HA2LH57kAACAA
      SURBVEc/pWPvAX799/+FHpvAS/VBZJNIbzxFe3UTguCAkJ+BxSgtNVUILDfMeKlCRFeps8l3
      rfeNpFUdX13zqhRB7eEQDUEfJlFkPpEiPnuFgHz3Bl7QdKyisLL8d7vnG4bBZ+fn8S8U6A9Y
      OLS/AYd0Xeh2umRUI8Pw0Q9ICTLcRoAlr58r4yLVL76Ox7PsDXctg8TNGIaBrmmUKxWiS1Ec
      TgeRSIRQVRU1NTWrkgiscyuPRIBfeuUVDMNgZKCf2XSWFr8H0x16y2sfYq2q7oG6ECcGe2n2
      3N0fWdV1BnMVFoqVu573IFisVqSOHppLJRJnj+O1yMQKKeIffYBVV2n3+ZFNIoZhkM4XSBSK
      K95XItB/ZQqTZKKi6TSGAkQLBRzFFD6zdIuTy2xZI+nwopWKeCtFykBJ1Qhbb1UbLVcFojHo
      58T8PJliAbdJIHA1obthGCyUVUJmibymMxOop5JJs0XPI4u37zzSioYzVcGpgXWpxHgsz5bw
      dWcUURAwC2DxBTByRTRNuzWftMOFuH0/dWvoSA3DYHBwEE3TCYVC+P1+gk/B7g73QzqZxO5y
      oWk6aAqS1X5fGtbD8Eg8sWRZxjAM6hobef/EcbrDQQ4337RcIAjLTp5XHfphtRBruoFZut7w
      rjVsSRQ5XLU6c8Xy+TrDBYWFsoquabR0diEFTSgD/czMTNN4G2+qB2XHzl0ATIyNomzZxZyi
      EkgsYc2lSBoGJVXDJkv0xTNs797IVCzBRDxFS8CLruv0hIO3pPa5MCkwUyxQrZeoMi9/hktF
      HUtVLTsa6yirKsl8gUa7nUQ+T9B1d6vr7p5uyorKQjzB7PTkco4qp4+GtkYGpqdRcjk211Zj
      a26kb/wKgmjClIpRa5TJaQZLVhfleJLifBpvTgEEJAQWZzI0+e14zKubiuavIlCYYnJ8jLbO
      rpXfy+UyKgKbDz6/pncrCAI9mzc/syOsWs5x/ux5tu3dRSyRpJgt0NOzHCq44kZ6n1aKa8FA
      N/xyx3MfmSulIAi8/OVX8bpc/Ornv2Dp1BgW9V4Fv/7RyoJBdUeY2tYwEyWV6mCADTJYpNvP
      mY7ORDBJEpLbS/uuvdTX1XHyZz/ikNvM2U8+oub7P3jk+Z2dLjep8RGs0UU2VvmRHEHqPS4u
      Tc1wwGqmxm6hb3ZhuTOSJU7MLGIoCmGXg6Fogja/B9/VSKUdLY2UFJXe3ksrAqxbbGy+mo3B
      IkmEPcsjX4331g7sZiRRRLKYaaup5uMrC0wvZXn1K504LGaqNves6hS3dy6HO5aUeuYTKVw2
      Kz1WCx/+x1/iSRYRua62Vk3nOZ6aYtvBBpZKCj0+OyZBAIebuLeKlpuS1mUyGbq7u9c8X31W
      BfcaF8+dA9EgGksxNz5Ew6Y9yxvG3Wiwu0/D6s2+43e7/JFaBURRpGfHTqozOq7JNO57/kvh
      nkzhmUoTmkijvj/M0d4ZyhUZsbaZ80uJ2z5nKpkmMj5Ho81MrlhCVRQmJyfxbdnJ0bLIbDpL
      IZ9/lFUDwOPzUbLYafK6VxxXFE2jIMr8Xf8kH8zEaAkFUTSN5oCfXc0NbGqspSCKyBYr/dEk
      4/Ekmq4zly/xm4ER2m3XO5kGNc+58Un6Elki+eKdinFHMsUSn3x+Ee3CJI0X5/j0nz5aOXY7
      QbHKMq3VIUJuFxZJovaNvcwfaKd8Q6sQgZqMQv+n08RGEgjApOykc/8hyrpB+IY9lZLJJA6H
      A/k2uayfGgyDpcV5yqpOKV/gYZO+7th3mI2d7VSH/LRt2omQXaKsGphMppV/gnB/YnYtn/T1
      6+/cyT3yYAZJkggJZqz3HH1vRQDqT01gnJrg2PQ0ZaWM0+Vm89U8x8WKwkI6y0Ishe38HLMN
      VSTzBd7/xc+o6+rmq1//Ot09Pbedlz0KzGYz+55/gRO/+Cm7r3qPqpqOSdd4sbMZZAs/P99P
      vcfFh4MjNPq9HGhvRjKJ6HqSC5E4tQde5O0P3kGoaaDdbcep5lbur0pm5M5N+Gsb+Pz9d3mu
      PsRcKkONx021++4qdLZU5si5QUKfDiNdffXlhSRj8xGaq0NIpjs3omg6S3wpQfTDC9QvpjFf
      1d6ujQICIAgGgSYPaUPE+8pXKZZK1La2YRgGyUSCpUiEhqamJ76n1L3Ixec4fbaXsiGxMeCl
      /sAe3Pe+7I6Ioki4oRkAj8sFfLHb8jxyAVZVFSm29uDlawhX58iyZpBxyrgtNqz9c0zt0KmX
      ywxFk0weHcI9nUYyQHh5O9LGLbSlonTuP0z1DRbLR71Xj2EYLC0uUlFVTCYR51WVN1uuYJEl
      zD4/mtOFxdDY8/wLRAZ6afG4aK0K8MHAMA1+H0VF4YUvv0bbhg2YRIHqmlrm+i8yffozvKKB
      WxJJuvx079zDyf/2j+yvCTCXyrKlqYGFVIbB+QgmUaQt5Ee62jnpuoGOgSSKLCUzOD8bXpW9
      sTFdYeGv3+Vyg5+XfvAajtsYwsqKytEfvU/VYpbQHVzWdSCwI0xX0EF08z66mluYuHIF91gv
      n8ZjuOsa2LFzBybT079HksXhpK65nWq7yq/fPsEPDtzeBfdZ4ZG/cU3TMMr3Zwm+efcBkyhi
      Uwzs2QqJ6WneSubwXpynuqgiGJDeWMvX/uLPMJvND5yI/n4ol8tceOfXbAh4sJhljFyG07Ey
      Qn0zdW0dbHW5OXPqJF1aGV8xi2nrDq709TLWd5mWYICmoJ/+aJLmzi6USmUl4qZr/2FGvAHG
      zhxHyKexJqJk0yla9h5m5tgnGLrG2YkZ3DYrreEqFE2nf36JzXXVXJpdoKIb2C0WSpUK8wsx
      qo3VAYqiIODQwTqV5KMfv4/ZYcXitFHT04LdamGi/wpKNE3NYnZl1F31XYCcJLDQEiS8dS/J
      lkY6t+7AMAzOffIhzVYbNc0tdG7e8kwIL4Bs87K5Fd59/xPatvbwrG+I+sjfuslkQrBaILt2
      9zlYbZF2ZCuoxy8jGGA5Nk5VqozIcoOaO9BO56vPoV6NWvkidsa7FomULpao87pxWS1cwUzt
      tl14fX7GR0eoCQbxdh4gd/IozE/T2rOF1OBFphIpxrIFyvk8Sz/8r2yuClAliywN91GwuTCU
      CoqqEdNEvE4/6pmTbHrxS2S8XsqFPA0BH8WKwmgkxub6GqxmMz8/10+uorC7rQkUjfTANJ7+
      WSyGcNsQYxNQdyW+8nfs1BiKKOBSbj/kpjvrsVyZpxBy4H15G1ta29n2/HX3RV3XUcslmr/y
      B4Sqqx/1637sLIwM0bb3JWK9pykBD5fG/8nyyFu/2WzG2hhGj449uIXMMJCuzqF9qWX/57JJ
      oG+Djz/+H/8NVbVr24z6XlQqFQRBIBaLEQ6H72gsSKdSGEqFkH/ZGhzNl3Bv3crMzAwerw8M
      A5vdhtfnx/L8l/jw7bfY295O//Q45pJCS89WbPMTbKsLr6yPL89oK2CG1pZ6/uHkeQxNRy+V
      sdlsFGwuNvtciIJIwOnAKstcmpmn2r2c3C9otTC/GMP87kX86r1TA9zYQdp0Aat2q/BqokD2
      0BaqXnuO/PQ8biOP3WZl04HDq8/TNJokg1wq+cwJsKFrhDZsY+Hcaey1jc+08MIjtkLDVUv0
      n32fmPfRWiJzFpHG/TsI1Ty6GFCz2YwkSbhcLqLR6B3Pc7pcRAolTCaRWC5P0uGlqrqaYDDE
      wvw8iqZjmCSujI/z5o9/yKadOwmHw5hCNaTLFSanpphI51E0nbKqomga8XyBmWSakUiMs5Nz
      tAV8fHVTO3VWmaXIIobNzpW5BYYmpxlZiBBw2gm4nJyemAEMfHY7JpuFqSo7GPe30ngnJxrR
      AC2TI3H8PM27tiGF60kuLjDW17s8NTIM5ufmOPKLn2Kz2ahrefbC6XOxGcZmEuw5+DxiOk7h
      SRfoIXksG3w3d7Yzdngn+lsnHlnSGLOmg9nyyNcNBUHA6XTe1Xpqs9n4zp/+Wz59/7fYXHZc
      ZpmJ998maF3upDKRKAGfF//+F/jyN7+Dz+cD4PmXXyFQHWZmehq7o5n5UJBSqcTU2ChmAbpd
      FgrFEt0NtSRyeZayebo8LlLnj9OGga9qecuR+VSGjwdHqA/4+OrOLeiGwfB8hInZWX7vlR4u
      HhulqKrUTmVW1nAfJKhDBGzD0wS+/mVqGuqxOR1E5idQC3lSiTijF86hLi2wQc0zZg888X2U
      HwSHv4bp428y3Cti89Vw/5mYny4eW17o7X/0LT6tlLB8cgm5oj/UUK9IIq7vvsL+r7xxy7Gb
      DWAPys2OBzcmeTcMg8jcHG2U8WoGI+MRtt64/YUgUFRVKuUyVdXVq+61ceNG6mpr8fp8mEwm
      SqUS1XX1nHjvN8heB4Zu4LJaSOTy2K76kHttllUup5lyhX0dLSspchVNI57N0VxdhUes8OIr
      PXzwYR8ia/Otvh0ru2noBparmkk+n2fRX4OazfHpX/8VFslETV0t3m2H6GlofCadMETJwr/4
      +reBqw4TPNuZyR6bBShYXcUb/9OfcqT1VyQHL6OOLWFNlqhYJcyagTu9Nkt1RRKo+1//Ndte
      fu62DaZcLq8p9ev9kslk8FzdfCwyP48+dIGw087g3OItCQIa/F7m0hlmj3zAksdH3c59+INB
      Ln7w7vLG2aEaTJKE1Wolk06TSCRIx2N8EF82TGm6TlPQz/mJKTbL8nIS+KsIgsC11VhBEChW
      KpybmGF7Yx26YXBp+DJtbjuFeP6hQimvXWutaFz41Ts0b+2hvqGBcE0Nv/z5P9Hd3sru17+C
      y72839TN29k8i/SdOUvXnt08y8GJj9WEa7XZ6Dl8kFEZrDt7aBBVLJJELl/izI+OgG7gTlUQ
      gILVhGozUzY05C3t2K1WikMT5LI5Xn3uzhkdHofwAivCq+s68aUIjWaJiWgcv91OrW+1a2OV
      20X/3AIvbepanieeO86CxUazWcBlMXOm/zzphSmihoGEwVwkSlPQT8Ai0+J3Mzw3T10ggCTJ
      HFuIsafaj/OGBPj1XjeDs/O0hAKMLCyxq6kOqyyzmErT6LLjsZhp3dfK3Fgcz0QM+01ONIoA
      grG2j20YBsrkPJFIhKamJkRRZO+Bg9htNtw37KZ4c2L8Z4ns4iS/OXIGXVUoyE72bt/4zI7C
      j1WAK5UKNfUN9MsWCqUiTW4rHqsZt9XCrh88j2QSOfsPR1FkmQ1//n0aN28gGYsTDFfjdDop
      FAr86k//HePDI2zY3PM4i7qKbDbD5OQUkiRRyOUoTYwQLxbYVBte2XXhZqrcy+l0BEGgznPN
      a8qEYRhYZXnlt0yxRCSTY2PQy8bq5Y27e8IhphNpCsUCdTv2MTk/Q/cNWT+dZplkJkvY7WJP
      SyOiKDC8EIF0gg6PHUEQCIfciDVhStvLzH5yCbVUweZzoSsVqjbXMXpliZYrKSxrSIjpDPio
      qlr2KLrml1sdvtV4qOv6Mxmjm1mKsGHvc6Qu91HOp9C5ujHGM8hjffsWiwVRFNm2dz9Oi4V5
      X5hUcTnfUb3fQ9jjov5Lm+BgN5sP78Pr89HS0Y7L5UIQBOx2O6HdPcyeuMB7772Hch+pWR4G
      h8PJpk2baG9vx2q1oviC5NRlC/KduFvmzRu1B7fNypbODsx1zauONwW8HGxtRJq4jLm5jWGb
      n7emIlyOpylrOi6zjN0soxk68VweIxmlw3Pd8BZ22OgyqYSkCg2v9LC0rQ5haz1bXtqIJ+Bm
      95f3Ewnce9EkbRbZ8md/iNVqXc5EMjS0Eox/I4ZhLG/K9gzibWhhYeAswZZ2tmza8HTtbnCf
      fCFlr66tpWZDNwuzc0SCdRSU641hW2cTGze331FFPvDffZeNrz6PKIqcPHnylob0OBDF5b12
      i8Ui+WScnRZ4ZWM7ZydnmIrduhMEgEWSV45pNwnzzfmzW+1mylY704VbBaDF42Tg8yMUNZ1y
      qYzauoGlxi4Cuw9SbO2mz7AwsbhEorz8Hq4Z2QzDwGwSaXY72Oaxsr06QG1ViLFUjrxsRVU1
      LNnl5xmGwe26m6IsIn7zZcbHR1mYnyeZTLKxu3vFc+xGdF2/bWqbZyHnl2y143PbOfL+x9h8
      vmdWfYbHrELfSEf3JmwOB9W1dQwe/ZQNegHxauMz2a87tBmGQalUwiSKnD17lv5LF5FMJjb2
      bMbr99PX10dra+vKHPVxUSgUyGQyGPElrOHAsprq9eB22umbXaCjOoTtaoyvrusYGKSLJT4Z
      HMFtt2GVZTqqQ1hkiUS+wMDs6sydcVMWR+cGlKUJ5BsCL0yiyGvNYcZnxmlwWmjKLpFytrBp
      6zYAmjs6OXvURPV4L4uFMmH77YRoWVVPy2X6E3n+fNcurLLEzL5Ops6OYWqpwtNYReHjXrwK
      ZCwmlJ0baHvxIF17dnLkww+oqa29Zd/nG7lTsMjjsEwXCgXKpTJen/eR3L+QThBNl3jtq6/z
      7M7kl/lCHVjrr2ZosFWFKc2MYDcvp5URkjE0TUMURUb7eikP92Lq3Mz2HTvo2rABTdM4+t47
      LE7LhJtbmZuextrZ+ViTm108dRJ/PkWH17nSaOwWMz6HHbfNysDMAiGnA5tZYjKWpLO2GrvF
      TL5cZiGZpjHoZ2wxuryXjSjSVL06ab0rX0BwOpmfM2gUVy+FWWWZGreDxWKZaFkhGLru7SQI
      Atv2H2TUYiE3OUKY1dZgwzCYVAT2/uGfYLfb0d/8FZquoWoCnqZqTFUenDYrDpsNz787yNDp
      c7zx/e/gDwRWRtlDL71MpVJ5apLHmc1mKuUKRz79lL379t02Kfxa0dUKk9OzpCJznCxCQ2PN
      M61CPxEP9NauDYwm49jjC9Q47TSKOsNHPkYXTSxNTaCUSuxpbMJms2Gz2TAMg8aujbS0tfHB
      u+9gKuS4MjZKsKaW2tpaPB4P7qvLGw/KzevJwWCQJou+EvkDrGQMMYkiW5rqOD5yBZ/DzraW
      hpVzTIKIoumYJYnu+hpm4kk8dhvOmyKBLLJE/8wUTdv3sXD6M1yyhCSKXI4mKGkaDqsVj9uF
      0NxFIBBYda0sy3Tv3U/f0jxCObmitmqGwZTNT/1rX8blXg6Se/71N5j67AOolGgJeDgzkcVu
      MTNVVDjQ0kyhdxivz7civIZhcO7YUTo2bSZcW/vA7/NRIkkSXp+Xnp4eVEV9KOflcj5B39AE
      Fkmmc+tWnj1XlNU8EQGWZJkNh54nlUwwcnkQcWkBQ48RkE1MFvKkDJHp8TGK4TDh2jpEUWT7
      jh2IJhPf/t73MQwDSZJWshyOj42h6/qKB9SDEI1GKZVKNDQ0IAgCmXSavrl56nzeZfW4UFpR
      +RVNo6JqOCxmWquCq4R/IZWmxns9wrRUUW4J4zMMg+lYEqFcJtfQxMV0iS6HjKbrbG1rJl0s
      MaKaqN+ylVD1nV1HpWA1xmxieb6ualyx++l57WurPKQ8Hg+TuRKiKFJOZXmlu52yqnFuep6h
      vks89yc/IB6PEwwuW8Tz+TxGbAldf9hQ90dP4Katdx4EmyfMv/rD75PPJBkcHKfSUftMq9FP
      LAZMEAR8/gC+A4dRFAVRFBm7fBlfRac4P486PsTFS+fY9ZVvEAqFkK42yhuNKdcaalNzM0tL
      S3i9Dz5H8nq9ZDKZFaOQnkkiiyKji0s0BHwEXQ5EQWB0cYl8ucJiKkN3XZjJaJw6nwfJZKKk
      KEQzOZpDgRVBTxWKtIdDtxh3kvk8FVVj4sP3cHn9tFcHmUqmGakIeFu7ObCG1Lih9k6Wxvuo
      tspMFSps+fY3bjs3/cr3/iXzc3OMfvAbSorGeDROWVEojw2zsGEjdQ2NK+daLBamMjkyFy7i
      9vpw/g7ugCAIAk6Pnz37/U+6KA/NU6H+y7KMyWSis7ubA9/4Loe++QfoNichnw+///pLVlWV
      2elpPj9yhPPnzlGpVCgWi8tGL5PpoSygZrN5JRuiIAhEdZEP+i6j6TqLyTSFcoVsqYzdbKYl
      FMBuNjMwu0Ctx8VCMs3Y4hLRdIb5ZIryVSu7pusravc15hIpRheX0HWDfe3NfHVTJ6Njowxb
      vYQOvoSvrXNZsCcm7pkIPRAMkfQsdw6GJN+aHdIwOHPmDAB2h4NLkQRDkhOb1Up3XQ1hj5tS
      cfWWNMViEXd1DZcHB/nko494FNxuf+DfFXRVIRpdtuFUFBWlXELTv7i6PlVR2NdGnJraWpRt
      Ozn323fwjo1itTvweD1M9fcyP9hHXjPY21jD6AfTpBWVRDpD0/ZdhG/jbPCgvPjSSwTdTuTF
      GcIeN/2z8zgsFmbiSTrCIRZSabrrwtgtZtqrlwU/ll0eVXOlMmAwuhAlXShyYXIGiyxTUVUM
      wyCRy3Oo69rSmUF3TRXF6StEIzP4LDJxm5ctBw6t6X05uzaTO/sxE3mFrmLxFgNPR0cHgiBg
      tVoRzWb2HX6OgYsXOHrsKPte/hLNV/c71nV9JaH6wUOHuDw0xJWJCSqVyi1eV0qlckveq5X0
      O7fRGm7cXlbX9ceS7uhJkUom0JQCo2NZJKtEMZ2i+2oSwes8XFK7u/FUCfCNNDY24fzmd/ns
      /fewWa0sLSzwWlsD7nAVkXSGgMNG1TXDS8DFx+fP4Pf6qGtsvMed14bD4WDP4ec5/+6bnL0y
      hd1iZk9bE2bJRE9DLecmplE1bWUNMVUociUaY097M1eWYggCdNfVUFFVRhaX2FRfg1mSUDSN
      48PjKyOzIAgc7mrjylKMqYUIVIdo2LFpTWU0DIOWjk7GigWqo1HGLp6nZ//BleOCIFAulykU
      ClgsFhoDPqYmJ9m8Yyfh+gaqw+GVKYkoigwPD7Nt+3Yk6f9n7z2D60rTO7/fOefmjJwzQJAA
      ERgAkmiSnbunuydoJI00M5Y02l1LsstbtQ5b5XVpyzXrkksfXLuussofvK712kqjMBpppif0
      9HSzuxkBggQRSOSc08XN8SR/uMQlQIIkwAz2/VWxCFzc8573nvs+b3je5/0/BspLSygRFDa8
      3rRwXSAQwOl0ppczd9dlMy59M1Z6q+GLooimaSSTyfR7XgacTgfDY6tUV1fSdek8FU2vIAKy
      LKdj5rU9zj40Td82+9L1+wcJSd///ve/v/WFZyFRs1usVisHGw9TVXcAIxqlBh2HxYzVbGJg
      foloIkmW3UYsKeMNhQkvzbO6tMTE1BTZefmPvQ0iCAI5FVVoiox/fQ2L2cyCP4hgMCLlF+Gs
      qCEaDBKNRlgLRajKz2UtGKaprJgseyrEUdU0ErLCxKqXfJcDs8GAJIos+PzkOh3ogKyoBGNx
      suw2tKIyymrqdlW/zXQjOYVFWOx2TBYrLs92R57VamV5aYnVxQXyK6vp+fgX5BQWU1xWlv6M
      AOtrayxcvcTiho9gOELLkaOsBkPU1B9M+xo2Azp2Mr5Nx+LWE1yiKKIoSvq1zdcfprS4U9l7
      ef/WNqzrOpFIBKfTuevr98JgXw+aZMZmsWHLykcOrODIysNsMiBJEqIosuBPsBTcfdTagXw7
      uY5UFKMoilwbmuPq4MyO730xLPUBCIKQmnLdPlAuCAIem5XmsmJm1jfonpzFgA6KisFsopQk
      wwsrfP6jOb76e//ssXt6s9nM4dOv4i6vwuF0ctJgwGg0cuD2VHVtdZW5+Tnk6XFcVgvFHhdX
      J6aJJGTKc7KwmIyU5WRR6HExvrxGKBYnJsvUFOTRMz1HNJHEYbFQkZuNz2SlpuXRTqjez1st
      SRK5ubkM3LiKI6+A6rIS1qYnsLpcJJNJcnJymJkYZ+DzTxDkJOVVB2hubk5Jmh5vJxqNYDKZ
      0hKn9+PuSK1NA7rbWE0m047T8gehaRqapr2Q54+bjp1M/5za7HsyajG75YUyYF3XURTlni9q
      anQEdXGOaLYLu9mMoqqcuzWCQRTJsdtoLMrDG4mxFIwwMb9ItsVEncNOf18vLa1HHrtegiBQ
      XrFzpoec3FycLhc/ut7N0vIywVicprJinBYL9cXb5WYUTSPLbieSiJPrsFOek8XNuUUq8nJY
      M9mpPXl6T7MfVVV3lfvYarMhFpWTmJ/E6/MxPjLB7x1tQ5Ikfvzn/5kcVIqsZg7XltEfCdN7
      /RqKqmF3OJhfWODIkSPk5+c/Ume40zV+v5+8vLxdlydJErqmEY1GX3jZ2mfNC2XAAJ988ivO
      njmbzsEryzKJiWHKst1cHpuioaSAQreLQoeNI2VFaKSyEpR4jJRs2X9dDISY7rqE6l3DU1FN
      VU3NU1l3qaqKoigczvVQX5BL7/Q8OY57tQ51XWd4YRmjwUAgGqM8NxtBEDAZDcwZbDSdOr1n
      ZcfdTi1FUeTo8eN8srbK0VIzkeQcPp+P7OxsKu1mmgqyEQWByUAEq8fGaH8fitHE2+9+hevX
      rzMxPs7VTz+mvKoaxWShoqKcnJzc9L01Tdu2/t2JTSeWKIq4XC6CwSAOh2PXDi2D0bjj2vvL
      zgu1BhYEgdraWowm07bGcaPrCslEgtrCPBRV4+rEDA6jgWKP656DAps4LWZqst0Uiiqzo8Os
      zkyzPj+HbrbgcLrSZT+uUUuShNFoJBAMceVGLyVZbjYiUeqKtgt868DlsSmayoo5VlXO6PIq
      saRM0pPH4dOv7mi8DzPQvXhzRVHE5nQyu7JKe66Lc1e6wGrDmlvAstdLPJHA58jCKEBsZYGa
      5iNEoimRgPW1VbIKCrl5vRtXMoZ7dY7rPT0Ew2FMNjvejQ3MZjOXLl3C5XLtOEpunSkYbi9D
      Nuu1lWQy+cB19m46rWe5Bt4N8/74ntbAtXk2sm13OqtrQ7P7Zw1895cTCATQk0lKi/LJdtiY
      XvOSb7dQm/fwqKtN424qTG3z6Hocb28nA6NuqttOPbHpmCAI1B4/wY3BIXqm52itKLvnPaIg
      UJLlpiQ7lW6zoaSIvtkFcptqdjRETdOeeMMrKirC6XyNmWud5OXncaC+HpvNRvJQA7FolEKL
      heXFRWJziwyNDPPb3/4OdXUHEAQBn8+HwWjEJeiowXXcukK1HGKx8wuC7z8kZwAAIABJREFU
      uSXMzcwQ8K7j9/vRdZ2cnJw9dT6bxnk/4918Ji+L9/pJ8UgGLMvyM3Mo5GRnU9FwGLceT6Xv
      DIdpLX20/V5BEMi1mnApYZZmZ6g91PDA9+/lc0qSREtbO865cdbDYa5PzZKQFZrLS3BYzOi6
      jttqIZJI4LytIlKWnUXwPtI0m+ehn5Tm12aZTqeThlffJHLlMpc+/CeQJPRkAiEnnyPHjpOV
      k8OR48dxuZwsLiyg6Tpmsxm/30dxSSnl5eX8+B9+SF4iiTccIZyQUeYmqT37Jk0tLTgcDi5e
      uEAymeR4W9sDY9S37h1v/nuQQMCDjPvLyiMZcDweJxwOP1bs8W4RRJHK1mPMn/8VFW4HiCLX
      ZhZoKS1k3hfEajJS+JC8QXfjSyjk7ELPeK8BByXl5WzMjXOopIh4UiapKKwEgtjNucRlmaSq
      MbXqJRSL03GgGpvZiHeLAQcCAVwuV3okelpqF6Io0naqA051kEwmCfh8LK+sMDk5wcrSMqqq
      4HK5sVgtHD12HIPBQG5uLgaDAV3XeeXV11hfWWZ2eZm2915lrLuTa5+fI6+qmgMH6ul45RXG
      x8b4+c9+RkdHB+UVFenO8HEM8O5cyhljfkQDdjqdDw3ze5LY7HaS2floSoTm8lKW/EHOT85z
      rKaCwZl58hy2+yYUv5tQIola00hWds5D37tXA7LbHcxrqemyzWzCaJDon11gctWL22ZJnVAq
      KeKnPQPcmJlHFAQi3hCl5eUoikxWVja+jQ08tzvGB0U3PS6b+7EWiwVLUREFt4M1dF0nFAoR
      DoUoLCpCFEXm5+e5cvECDdVVKCYLTc3N5OTk0Lm+jtVqpfGVs+QuL2O12fD7/bhcLuoPHiQ3
      Ly/dTrxeLwUFBfcY4aN0Upmp9B12/fQURSEWS6W8fB5aSDWtx5gJhBEEgeIsNx67HbfVypGa
      SgbX/Awtrz+0DF3XmTG7Ka8/+FTqOHFzgCr3HQ90LCkTlxVO11fTVFaMqmmMLa9iNhooz8mi
      pbyEHJsVp9OJ2WzB5/Nx5cN/RL49Kj/NUfhBB/JdLhfFJSX4NzaYHh3GPzPJezlWasOrrI4O
      ArCx4cW8PMvq0iKiKFJcUkJWVhYVFRVp48rOzk5vP+m6fl8ly0QigaIoqKrK7OzsQ+u++Uye
      5SDyorLr1rG8vMzo6Ch+vx9Zlp95cLrJZMJ+sJnJQBhN15Gk1HrIajLRVFGKP5Fkzhd4YBk6
      YHY4H7n3fpDuFUB8NdWY05nZdZ3qglwsRiMmg4FIPMlaMESOw86SP4iq60j2lJNqeWaa+a6L
      1GW78Qce/DmeNpsZGKY+/xjb+E1yfMuYDRKiIFBkt7A4P0c4GKQ2x83a1Qso99Eq2/qc5+bm
      mJyc3PZ3VVUZGxvb5mcof0gorK7rRKPRtHLLl51dT6FLS0vJyspCUZS0q19RlGcmLyoIAiXV
      NcSLSxi71kU0vt0tf6q+lv7pOYo17b7TaUXVMDsfPRvsw0bDZX8QxZdMpf3UdSLxBPM+P0ML
      yxR53JysqyQcT7IeCmG32Zi2ZVN3uBlZllFmxjjkcTK8oaUVIZ8X0UiE+fO/4kjhvZ7kg3YT
      q/1dqIIBp81EUlFYXVmhpOxez/tW2tramLtrdL3wxRcging8HnJzc0kkEulTZXdPteHOoQhR
      FAkGAumlxpeZPa2BN9UxNkcio9H4zJ0JFosFT2U13onR9L1n1jdYDYQIRiJIhfdf2y5GE2lZ
      n6dBXetRshcn0hkUro5P860TRwnG4iz7g5gMBgQhiaJpKBUHOHTbC66qKqp4u+Fm3wmQUBSF
      UChEVlZWerr4tE7yaJqGd22N1elJpI0VWncw3k3yHTbySRlWjt3GdH83q5JIfnHJPe9VVZWJ
      iQlKSkqwOxwkEol0jPqJU6cQRRFVVZFlGfl2xklZlu8ZGBKJRPrY6ebaPcMezwNvrskkSSJ5
      +5TL81DoF0URq8lE7/Qc1yZnmFxZo62mgmyng7FV7z3Te0XTWAtH0EqrsT6GntLDqKytY15N
      PVJFVYnLMpIokmW34bSYuTwyzsjiCjX5ecS35FBeWpinwCgSiidwF5emXw8GAng8qX3jh8Ui
      Py79Vy6R7P6C+piXWqvhvgEyW9nc+qmym1jp6SSww9R/09gunP8Ck8m07YCJ3W7HYrFgt9tJ
      JpNYrdZUdNoORxU3256u6+lEaxn2YMCbo+7mXp3Nbk/vUz5rQn4/lblZWAwSR8qKOF5ZQu/U
      LBV5OWgGI/Nb1sIr0QSjRhd66yvUtj7dVFaCICA4UmqZsqpS4E5tCcWSMisbPo4X5WMWIKGq
      mLc0UpvdQSSRZCWWpKDojg5V9kOCIZ4UsixjWZqmwPFogS26rlNvMzJ3vTPt6NxKeXk5b7/z
      7o5BKZudgMPhuG8EoCiKmLZE522O2hn2YMB3r/82H/xzmcpoGvMbfmryc5BEEafFQnNZEeNL
      K5TmZNM7vwLAeiSKsfUULWdfp6Ss7JkcJDe7PcRlBUkQubWwRO/ENLemZ2ktykMSBQaXVlnJ
      Lqb20KH0NVnZ2STL6/A0H38uKUvC4TDr0cdzCAmCQIUaZaSvd8e/7/UI4YPuIwjCC3Pk9Xmz
      p6ewKf36vPfgZP8GiqJsU4wUBQGH2cS5gSGaSlJBGoGETPkzdnQUlpQyMthHnsVEsd1KS2Ee
      oiggqxqKplKa7aHorsx+giBQ2/jsUsfcjcfjwZ376I6zzc9iMRggGnpS1doXxMN+JudWqK2p
      IppIoidjOLJyMYrPxkb2tAZ+Ur3o4xJcX8NlNd+zTnPbLFRkuajIdqeyIxRXPtU1707YHQ4s
      VQfw+3y0lRcj3v4ibywsM77up7Sh6YXzngqCgK2y5oGpYx7G5lLKsI+Tnj0K07OL1FTkMT29
      wNLCHAtrQQzPyHjhBRG12yvLd0m3bjK7ESDb42F0bYNJRaS27eRz6XDqGg9jcji3bWc1F+Vj
      Liyhtv3+mRafJ9mFxfji2x2SwXiCiUCE4ajKaEJn4yHT7HAiiaPwXk/0y4wgSpjMZnRVxbu6
      gtFseaapWvbdQkLTNDxWC95QBFtOqrffjPSxGI0UZ3vojsQ53L63w/FPElEUiWk6MVnBF0+i
      AVFPHvWnX31h127xaBSDIBCTFRYiMRRE3C1tVBaXYDKZ0HWdiaFB/KP9xJIyjQX3btct6gYO
      VlU/8D4pL7KCwfBynO0tyHbSNzBOTV0dnvwctFiIuKxhMT6bsfHFbE0PYMPrRYzH8GRvF/kW
      BAHJaGRYsFJ39o3nOk2VJInKs2+xsb6GJ78ASZJwOBwv5Mi7SU5+PlOFFUStdmrqDqS3CzcR
      BIGaQw1cDQQZvdbJofzs9BJG13VisoytpnFXjsJPf/Urjre1k3Nbxnc/48kvpjU/tXPgtNuA
      O+1uM2bCbhIocOze1Ezi9jDRgmwHrQd2ntkI+l37QFs32l9Eei+eR56doLmsaNsaWBAE/NE4
      csMxikqe3DQuI+OyHVVVicfjzH/yU6pdNlRNR0dncHWDw7/+3V21nY2NDf7+r/+Kb37rt8jJ
      zX3iuwNb27Cu66ysrDyXztNsNj+WMP5uzhzsuxGYZCrFydavY3Ldh2xzYiwoo67oyYqKPWsn
      2IuOJEnY7XZyT77G6NAAqsWMKApUf+XsrrfADJLEa9Wl3Dz3Szq++VtPdXtPEIQnqhe+F3Yb
      pbh1DN36flVV7/ts0k7Dx6zjM0eXZQThzrp3KRjGJ5k4+c4HT+V+giA8UwGD/UJOQQGe3FxG
      h4cRJTGtg/wwkskkE+PjhEIRak+dfalDIrc+j2Q0SP/NQUw2F4qi0trSxKazenJiArQkEUWi
      uaE+fc39OzadiZGbeH2R/eWF1nWdizeH0qlLAMZiCgfPvP5U75sx3p0RRZFkYANpsCd9BPJB
      6LrO5K0BlKkRCpqPUnYfpc+XEZPNRVGOm/zicozC9gTrFqOAbnLicex+tqeLJkwGfX8ZcCAQ
      IBKNYt7iyc0uKMLlerrJvjPsjCAIVB46jD+3hIKHTFN1XWe8vxfTyhy2qgPUH2p4oZ16T4OC
      0gpmxwZx5eQhbfnoZrMZTVX3oLopkONx4XDn7C8DXl1dJRmNEk0mU715NEn5wYZnLi6Q4Q7u
      rCyOn33todtj/T3XyfEtEbE4aDh67BnV7sVicW4GzWAh5veibnEde31BQhvrrKx6d1mSztLq
      OqVlZfvLgNdXVzlZW4HDYkbTdeIGywsX1ZRhZySjiYFQkvLWY1+6kXeTwtJybJKK2ZW9bQT2
      uN0UFhVuy8T5MDxOO/Pz8/vLgDf8fmbWfeQ67alDDMkoicTu9XZfFvZjus6DDQ2c+eDruD1f
      1g5XZ2xwkNzickIba+kRWElGGRi4hT8Q2ObbeRCBQBCL1ZrKVfUUa/zEiUQiiALkOeyEE0kM
      dY3Y7fdmQXjZ2Y/nYTcTfW1lM+fRlwFd1zFbbShygpKKSjb9ywaTjWNHmzGajNh2uWXpdrvw
      +3zEYtH9ZcAej4fVYBh/LM4CJspraoE7ES9flsZgMBj21bpf13UWFhbuef1piva9aCQjYXJL
      SkFVSMQT2zIGLy6vIScUgr6HCzMCBDbWWVr1YrHa9pcBl5SUsBoK85PeQa4NjWwbhZTbybMz
      vHgIgkBpaemXWoTO7HAhh1KpWyN3iR5k5+RQkOdBNO1uBFY0OHrsGAV5ufvLgOvr6yksLmF0
      dQM1EWdteQkgLcOym4ie/bh+fFl4kUN0nwXJRAxF3y5GoCSjDPT1s+r171qeanlxEbPVhtVq
      3n+x0D6fj7/5wQ+Ym5qgpaaa+hMdNN3OZ7sbtubgyfBy8iK24WQ0yMjENKqqkV1QTFlhPoIA
      8WiYmKwT9q1gcReQl/XwXFipsmYAYf8ZMKSMcHZ2Fl3XqaysfN7VyfCC8SK3YV3XGRoY4EBT
      MwYBpoZukl1SyMxiGFGJcPhw457K23ex0HBbf+lLFIaXYf+TjAaZmJ5HlCREqzPthS4oKWZ4
      fI7GlibWlpb2XO6+HIEzZHgQX6Y2nFkIZsiwj8kYcIYM+5iMAWfIsI/Zl06s+3E/ZYMMGV5W
      9r0BbxrtZn5Zo9GY2ePN8KXhpTDgzQgWg8HwTNKn7De2pufM8HKxrw1Y1/V0vmKn89ETd79o
      bEaLbeYBehLlbc29u3kYYlNX7GH3ujv09GV5zi8D+9aANxteJBJJN9CXQSBtMwP9psE5nc49
      LQlUVU3n0t1MiK0oyj0HCTZTfeq6Tjgcxmw2YzabMRgM6RSeiqKkjT6RSKRlTk0mU7r8jDE/
      X+4J5IjFYs8lQ95e2Rx5N6fPD0pPuV/QNI1EIoEsy+mjkQaDAYvFsqu8VIqipK9/VCRJQtO0
      9Ki72XncfVRzM82sJEkvnG62LMsvRWe+G+4x4Gg0+qU5V5vh5WSz0/sycI8BZ8iQYf+Q2W/J
      kGEfkzHgDBn2MRkDzpBhH5Mx4AwZ9jEZA86QYR+TMeAMGfYx0ve///3v3/1i3L/A//Rv/hea
      Tr+B07Q7G9d1jcuffcz0wjKzi6uUFhfSdf4TJmYWmRwdJKxbyXWauHj+cxaWlrja1U153SFM
      ksDK8GX+/OfdyBEf6/4ohQW53C9k4fz5z6moqHxgXboufEFeaSWGXVR9ZfwaX9xc50BFPp2f
      fEjUUkCOcy97iDp/97d/y8GGRpK+Kf74T/8zr716ksj8AOcGN5CXbyFkVWLLJDh8rlz/9J/4
      i4+v0XGsmd0Gj8lRH7/45TnW1tcJRJLkusz8/Kc/Y9W7wY2eGxRV1hJemaar5yYLs1MMTi5R
      U1WGAPzwL/4vlgJJlhfmwGjD7dg52CW0NsOtmQBFeZ77VyTu5/PrI1SW3ptAbsfQpeH+fr79
      vW/R1dnLN95oobvnJm3Hj+CfH2HDUIw9scjwzBqClqS57SxZdgOhxSECxmLeP92UumdgkeWo
      mW++dwZdU/nhD/+Rhprf4PSrbyAIAl/8+K9Zjyg4PEZ0Xaf2UCsdbdWpBxff4Ny5HpxuE7pg
      xiDpKIKFV9pbcTjcoGt0X7lAEgOllfXkWGSu9o1isVo4dvwENrsLUdJZnhljdHYVo9XFiWNN
      XOu8iCAaCYajnDzzGnaTSEHtMaJX/xJ/oIRpv8CJIjdz44PMLG9gzyrgSGMdN290EYzKWNwF
      HD1cR09PN/7FWQoPn6GhMp9ip4nliIL35jinOxpZDcaZH5mh8fjbyHNxDAaYnxhkYsmH3ZnF
      8eZD3OrtZiMco7iqgZrSvN21qAyPiM74WpyWAiPemIw5MMOiks3Bsix6e3pobGml/9oVkpoB
      VTBx+uRRAC6c+4z2175KviMVmXjr0i+oOPoGTWVuksF5fnqui2+8e5LXS6rRlAR/9YMfoXMK
      AZDMNtpPdOC8rewz0nMNPxDy+sjJyycS3KCouokSlxWLKUkssEZnzyBGg5ljp9qZHexlPRTH
      lVtEU30RbqMRdJ3e7iuEkwqF5fVU5Ft3nkIPz63T1Hyc4MIQumBgeWacmKJx6Wo/xVkSn10d
      5tWzp7GpYUKJVNTW8uwsBaVl6TIi/hXsrlTDFEQJk0FA1QUEVM79/B+JuGqo9NwZlsYHe7l8
      +TIDI5OoSpi4ZqOj4wTzs4u0t59kZXYCgMmpSZA3GJ4J0XGqg/KiHPq6LlLWeJxTJ9oxSTAz
      OYmiKlzsvsnp06fJZY3+GR8TU/Mcaz9JTY7I0OxmJjiBt189wZ/9H/+RM2+9jS5HuTY4wyuv
      nGZ1tI+gAjV1B8nJyeF650UU4JMPf0hW7TEOVeYD0NxUw8CtKRbCCq+1VDA+ucBKWKHIZWZl
      dpKICpe7emhvP8mx5oNEVkaYjdg4ffoMfZ3nt2Wqy/DkifvmEOxFtLfWcqV7CGdeEf1XL6HK
      USZnV1geuUbUUsypUydZmZ9KX+eNJsiy3gkrXlzxU5ifSmVrcpWgxZaQJInwxjJ//Zd/Tfur
      b6UNSklEuNp1mcuXL7PsDbE4NU1V01GOVHpYV5ycbDvCQF8fyViAuWUvQz1Xya1p4PTpE1gk
      ne6+QU6cOkXjgUogyeTkPCujnQRMJbzyyhkGr10kltghtYoSWWFhNcS1ri5CvjWWgwnaGsvo
      7h1GMbkxyyHMjpx7prj5JcWsLi6mf7e584gGU6kidF0lqWhIqPzor/6CwkMnef/1k9uur21o
      paOjg6b61ChsMBhASP0vCGxLRYEph7PHqzn/xedc7RvmxBsf4J/s5aOf/4KNSCrZma6piEZT
      KpdSjod1bwCjOfX73eV5SuqoP1BLiceCKidYmJvkypXL2HLy0CMb/PijL8jNL8Bls6ABVQ3H
      OHKwMv0MXKWHiMz3g2TBWVhFeHEEXbJgEO88pQ/ef5frXZf4xS8/J+DzMjM7xZUrnRSWVe3U
      5jI8Qfp7riMgM7wUYepWD0g2nAaZ4f7rlDcew+vdoKiw4J7rPGYjwcSduPKCXCdr6yEA5PAS
      gjmfmH+Jv/yHj/j6b32X+vI7MymD2U77iQ46OjoozHECIpIhdfhDkiQEBPQtrbDl9Jskl8f5
      xc9/xmpQ5v23X+XKxfN8er4z/Z7AxgbZeXkIApgNArK6Q4Lv/q6rfP2/+B4dHR38zm++S0/v
      MEX1x+j95Q+oamhFtOdiiS/S2X2d8Zk7+W7cZYcxBsbp7O6m81ovJlcR2cYwlzu7uPDZp9Q2
      txP3zzHjVUj4l7nRe4NQ/E42tpnxQXp6erg1MsnDBiQlGmR+PYDdbiMQCLA0P4MumRG1JNGE
      CoBoMJNrE7hytZvzfXO0NZY/oEQBSUo9CqPNTU1JAaLBhNFoQZJATSaYnppkdSOYKvvu00GC
      ifj6FLb8MhDMxDemseeUbuvkpqensNjsxKMhsqqbyRKimMxmzCbTrtdkGfaOrmvMemW++dU3
      6eg4y+FSOythmSOHKvi7TwZorS2grqGJ6xc+oefGDbzBO2lPzrx+hvO/+iXXr1/n1ugkDe1n
      Gbv6Cd3XrvGLT67y+hun6PrsY4qq6xkfvsWt4Qk2A5PVZIy+3h56enpYXPM9tJ4ri3MoGDEi
      E47GmJpdwGa3Ew4G0++pbjmVuv/VLnR7PnbTDsLuqqIgbp580XUUTcMgSSiyjGQwIAg6AX8Q
      s8XMpV/9nNa3vkmOVbz9sFKH60VJwiAZAB05mUQQJYxGA7qukUwk0wZqMpkRRQFdU0kkUz2d
      IEqYjBKaBpIkoCoakkFCVVQkg4Siqqn6KDKqqqVPTsnJJIIkYTQYUBUV0SCBrpFMykgGIwZJ
      TF+raSogIm4ZITfL3/zSk4lk6jpD6l6aBpIoIBoMaKqCJG13HyiKjCgaEEUBVZFBNCCJAqqq
      IoqbdUliMJqQJBFNVUnKMkaTCSmjIPLU2DwauXlSTVNVEEUEQFFUjEYDSjJONKFiEGR++ell
      vvmN99PXa6qKLCsYTEYkUUTTVOTknd9VRUZWUoOGIIqYjKkOWZFlFDX1usFgRBBud/y6jgaI
      t496iqKApoEoCsjJJIipNqxrKklZwWgyptrRbTvQVAVZUdPt/hEOM+hMjgyyshEgt6iSusri
      x37IGTI8T5R4hP6bt0goOgcbm8ly7i7J2ItA5jRShgz7mMzcLUOGfUzGgDNk2MfcE8ixtraG
      2+1+ojfZ1E+6HylHj/jI+kqqqj6yGuXjXKtp2mPpQmXqvXdkWcZofHBYWyAQeOJtGGB9fR31
      tmPqReEeA04kEk9UE2tTX+lBjeVxl+GPc/3jXvs4om7Ps97w6OqSd+6tMz9xE2/cTX0R/OLy
      LRoaW9CC8yyG4I3T7QhAIrDE5cE1jtZkc7nnJifPvEmW/dFiSze1vx9EPB5/Kgacm5v7xMt8
      XDJT6AyPhT3LiW/Oy9LUHIog4rCZWQvJHHDLTPkUdE3hyo1R1JiPS5euIIkSsDvNtcD6Aj/8
      2a9Al/nFP/2IL6704FuZ5aNffsyiNxVQcf3yZ/z0Jz9hI6YyM3id8z2DT/HTvnhkDDjDYyCQ
      le0BBMpbTvDr775Of2/XtncElqeZX1rjeu8Acd3E6VON9F8ffWCpuq6jaRpGWzbxeIS/+ukl
      VkMpscWu7m4MgkYkmpLJDYZCaPEIPv8G0+tRtEToaX3YF5L9rcOa4fmia3Rd6mbZF2FqxsbE
      2CS1DcdQfDOMBuBkqRfVU8nvfKeWiYlJPBY4d76Xk2ffuG+Ry94gP/j4Op92DxNPKsyODWBw
      F/Mnf/Q1DMEVdLOTtldOc+P6DerK8ogoIu3NFVzoGcAkB5heC1BfVfnMHsHz5p594Pn5eUpL
      S5/YDTYlah8kTr4pIP6oazJFUR5ZE/pxrn1c59vzrPemrvOzuLeqaiCAJIo7XqtpGhMLXv7u
      0x4+7R7hRGMl3zjbhBpcZHh8hqtTEfoGh/n3/+Mf0FKTS8+NmzQdbyceCqNGvUwsBTh16gRG
      FFa8fgRdo6Dg3tjml5HHMuCNlXligp1sG4xNzFNQWo4a8RKSJQ5UVyAIGQN+Wvd+kQ1Y13Uu
      D0zjsJowGiT+7O8vYDIaeL/jEBajAYfNjMlowCCJTC56+fH5AaYW1nntWB2/+14b5QVZ2++n
      avy7//QR/lCMP/nDd3E7HQ+s38rKypfGgB9rCi2KIsFQCEMsRkITsFpEFld17MYEYUXFYRDT
      65kHicU/rpD847j2H+fazc/1ONsxj8rj1nsz7UoKnfGRIQorD+AwG7h5/Qb1x1qZHOhBteXT
      UFNGPOyju+cmzcfbWZm8RVR00dJQmz6wkZRVBqdXGJld59bUEp9dH0cQBPKzHISicSwmAz+9
      qBGOJognFTRdJ6moeBxWvnGmgdeO1uKwpg7PKopyT53/ze++wb/+sw/53//2Iv/299964Ofb
      OiZpmobX630iXumHbYc+Dx7LgJ1OJ8shH/nlB8gvVei/dROLyY0oiOjo6fxFkiQ91REYeKy0
      Ks9rBH6cez/OtfeMwMkIEzNTWAprSXrH6esepaDMwbXRZU62l2EwGOjtH+DEyTbOffpL7LkV
      2JRZZryl/PmHl7GYDPSOLSDLKkfrS2itK6Eg20l5QRZfP9NIKJpAEgWcNssjzxwMBgP/63/1
      AT+5MPDQ67d+H7quI8vyvkgX9Cg8hgFrTE/PEAjFWbWZWFtbpaCkGjm4SkCWKDY8nkFmeIaY
      7NSUFYKuce6zS4QCG9waMFPTcpqZ8T7qq4qpr6zgwqVOIroZT8zL4PQsM9NWPr0+zoGyXP74
      e2/SVF2EINy7v+xxWNFVmUAwjN0sMTY5gd2TS1Gum2A4jtvlAHQWZ6eJqgZqqsoI+zYwOtxY
      jHeCPrJdNr79Zsszfjj3QZNZ2wijJ8NsBCPkF5WT7bYwNTZGQtXJy8tlbW0dZ1YuJQVPb//4
      MbaRRGoOHuZE23EKCgs53NRMYY6bsqo6Gg5UZ4z3ObE5/Uwm4ukjmlunpLqup4+56ZqKrKgk
      w+v03RxhYOAW3/7ev+D999+j462vEpnoxuLKZ3VpCcFoRFdkOk51EE9q/LI/wPTcCv/uX7zN
      //bffEBLbTGieP/orvHhXr640E1wfpjR5QCSJDEx3MtnX6S2nXQ1QXfPTURJRNcS/OSvfsDM
      cuBpPqrHQKf/WifnLnVjNJqIrM0wuZKqq9liYaivD1U0YBRk+vpHnmpNMvvALxG+lVn+77/4
      AaDT39PFD//2n1hZneM//vlfp98zOdTHP3z4CQA9Vz7h5x9fwuTI5be/83t87fUTAFQfOYxN
      svDuB1/j7Ikj5BcVkVtUzlfeex+L0cT/ey3EkfY2/s///uu8dbyOXLf9oXWra2zBbTViyi7F
      RYzO673UNjSTZb89tRUMlBZl09PZxccf/gSD28P80uoTf0ZPgtDqDNdHl/CtLmLLyiWmmWmt
      LQRECvKyyKmoJT/LQzTop73jxFOtS8aAXyKyCsqpry4BBLI8TmRBIDevjIM1d3YVag41k++2
      4VsYxac7EOXELuOiIBJP8id/cZ4TDWX862+fxm7Z/bqyr+syN/q7uwhCAAAgAElEQVR6mV1a
      JxqNYjZb6O/u5EZfL/MLSyx7fYSCYQTJSPtr79BUV0le1pMPh4TbsxBZJpmUH6r+shO2rCK+
      +u7rlJUUoQQXseZUYkBlcXmN8dERDjYcRlfjBBQLufanG2qRCeR4iVidn6S/r5+Sskq8K0Ec
      gszk7BT9ff0Ul9aS5bDiX5ulf6CPsopSsqwic17fjo04HEsyseijqsiDy2ZGVlT+w993sjZ1
      i3/5a7/P8swYN0emOXz8FLkWhc7+MV7tOEEy7OXzi91UNRxF9c0wsxbizNnXaDmR+qcoCg0N
      h9L3aW47m/656O130z9nn3zlqT2njelB/uYXV7C73Hz3d77FXt1bktFMXl4eH7yfqu+x7NTr
      xYV5UHhHF+v0qbYnVOP7kzHgl4jswjL+6A/+CMlgoKqkGF2QMIikXxMFkSyPkz+srMdssWI0
      1NDa2s6mmygcS/JpzzTdo4tMLPqwmgxEEwoVBW6WfRHcNok//s4ZwhtRKuvLKPMHWFpZZnp9
      gbiSEhMcuHGTttfe5Mon53jz7ddIxjtZD8Ypz31xkoBrmkBTyyFmZ1b3PALruo6q720LT0C4
      HQP+5MkY8EuEwWDEYNg8qXPnxI7VsOX0jkFCMqi3nU2praRYQqF7dIm//OQmeW4rbxyp5F99
      s50ct5WNYIyPr08x+Nkt3m8/TFGhgZkNQABEifW5UVa9UVYWpzh99h2ajjVz8dJ5gjGZkf5u
      TPm1L5Txgk7Qn+DQsWO4pYFdLx82iSkxPhz5cE+xCx6rh/fq3tvjnXZHxoC/5PzFp4P84+Ux
      irJt/MH7rRw/ULjNk5zrtvGd1xt4+1gVOVadX/7yV4QUGw5TAXPLaxxsOcVXinKYmBgmsbGM
      ajKiKDKnzpxi7NolFF+CooI83LYXZR9WY3JqjPDyIsXFVexV/UrTNSLJCJq+ewM2G8x7vMvu
      yRjwPiHsW+FC1wjvfeUMvVc+x5zfgCm5yNj0Ap6iOk621jM3PsjwzCqtjTV09wxQWd9CQ03J
      PWWpmk4knuST3ll+dWMGl83E//Ab7dQU7ZzeQxAE8typUfS9r/1aOhij7tCdPdmamoPpn995
      9ysAVHz160/yETwR4mEf1uw8VhYXmAprtB5p4OmZ19MnY8D7BMFoJyUrr1JQWMDsapgTJ46g
      JWLYKisBlc7ObjwFZfTeGuWV19/i/Gfn7jFgXdf5f341yOcD89SXePjTf3aG4mzHNondlxmL
      I5fmhkoWvBuYbVaeZ8qqiaFeRsZnqW08xK3eIWzZubz7WgeBtTk6ewZxZheS9C/iT4i8/947
      mKR7v6PMNtI+we5w3I47NuBwpCZ+uppkIaBT4jEDAg5PPscaynBnF3Dj0hfE7gopjsRl/vLz
      YbrHVijw2PivP2ihNNf5pTHeTcLeddyFpSi+VW4MjT/SVtKToDC/kEQijohGJJEgFosC4Mot
      pbG2HIkEUc1KtpZkaYvg/FYyBrxPmBm7hTfkZWhsgq6eQeaWJgiHwxw63AQoLC+ucbS5jhuj
      yxyoLEDRBV49czp9/dDcBv/zX3fiDcb50+918O//yzMUZj08AONlJKfqICUuM9WNDeS7Xdv+
      pmsya+s+VDnB1PQc2lNUXU6KJs62NTDQe43yxg4ENSVSsDY7zELMSPvxNpoOFLMSieKy7DxX
      yEyh9wkVdY1U1DUCcKiuJr0Odd7+e2FxAVBAQXktAG+9nTqxo+k6F24t8qPOSb7VUUPHoSJ0
      TSMR8TM0v0HDgXKud3ViyS2H0CILy14Otr1KVYGbqeE+1uMm2loPsTAxiOYopazAtUPt9hcb
      UyN8drGXLI+H3zrSuiUFjs70+CjeiIBvVSO/IJuJmTXqbiex0zQNXdu7QevoO3qtY/41hmYC
      vPvBtxi+0UVR83GWlxbQdAnv7Ch9oohF9tN08jRus7RjGRkDfknRdZ3rk+tcm1hjdjXIf/u1
      FirznQiCgEpKimZhdpZDdaUcbGrj4pWLvP/uO0jXruCwWwCF6UU/WZLKWqSEvqEhcvOsL4UB
      27NzOd1xlMnplW1T0KhvmYkFL3JcxlpRgjs7j1XvHJqW+9gChjtRWFFHYUUdAK3t2wNXvnK7
      I4bKB5aRMeDnhSpz5ZN/wtX4Lp7oFP0j0xzpOEvPZ5+SVV7LKydaUTZm+OFnfTQdbkIILzMz
      v8yxN75KofPhrpdoQuHvLk8Qjsv82984SnH29ulyflEp1pFpREGgp+sLjrafQVMTrEV1Gh1m
      IInJaMFhSnL5/AWioRCrwQnaTuzvbIqxwCrrqo2jRypxGG9tW//asop46/UCJidmsZt1em/0
      U1rTuO0orPAI/gKBe8UTYokYsiLf54qdsVlst3OO3SFjwPdhbryfuQ0jxxsK+PT8FSoOtqD6
      Zpld9HHm3fdxGTU++fmHGHNKaT9YwhfXh/jg7ftrPd2DKNFUX0VvVCayFuKrX32Hy593khBA
      lpOgQzgcx2wQScoKFYUFjE7MPnQU0HWdYEzmP50bobrARVtNHoVZ9wZSDPddY3p2hpxbbpZ9
      MaTxCSwlDmqbjqApCVZ9ISxSlImIia+/9wHJyDrzS9o9aWX3G6Io0n+9k2SomsGxaaoPN979
      DqprKgEoKH16nVU8GSeW3NkxdT/MJnPGgHdLVmEhE+PTTIwHOH72bYZ7uzhcW8nCwhKRpIZD
      kFn3b1BRWIVgdmIzJvd2A0HEaJAgCZocw+ddQTFn8cabx+i/cp64BkZXLu++U865z89TU3qC
      o/WFzC0FKKjL2bFIVdP5u84phhYCtJZn8fXj5Riknf2UB1vaaTiSytF8uOVI+vXNneDCPDOF
      ea+nXzfbc6mpZd9jduby9munmF5Y5Z333t73BrDf6//UcDhSU05JFIjF4iiqhsnupjLPzpI/
      RkGxma9949v0fPYFtLXseWRSExGu3JpHMYU509bGjf4ROk4cY/DGVYoOHSW+toTZ7eLG1U7a
      T3TgXZxgIWKjoykVOR+XVaJRhXBcJhSTmfFGGJz3448kMUoCXzt2f+P9spMMriE6C3Ds4TTV
      i0rGgO9DT2c3GxE/B0vOMtrfTV3jMabGbrEcs3LckcAX0Bjtv4atspL1kZtsbIQZmVqkvmp3
      6VYls53X3novLQ9z+pXUudGWto5t7zv96u1RMLuVUlklIatcmFjn0tgaoOM0G7GZDRS6rXz7
      VBUuqxFREDDssOmf4TYGM5d+9iOGc8v44Nfe3fNppBeFZDL58htwf/cF5ld9eIprWRzuIqv4
      AGfPvIIcWOVi13XGZtd49WgdtwZuUHHq1zl5sBCAoydf4+jtMgpffxOA0vxTHN5SdvvpV9Oa
      WBX1h3kckopGQlEJxRXOj6zRWOKiIseOJArEZZVZb5Sf9S0iqxp1BQ5+t6OC8lxn+vrtOlAq
      gWAYj9tJKBjA6nChxkMsrASorEydDQ5urCFLVvKynPj9AdxuD18WERWHy01hYRWHWw7sawNQ
      NXVf139X6JqOZHIwuzBFaV4xSxtekoqKPSuftuY6csoOcbihgo1wgvb6wvuXo+uoms4XI+vI
      qsbbjU9GtjQQk+me2qB/zo+i6miaTkxWmVgNYxDFtFHlOc1YTRJNBR6+3lqcFqbbifGhm/RM
      r/Kbb5zgb370j/zab3yX4NICgbVlRkQLB4osXOzqR5JUjjU38uHHF/jn3/vuE/k8+4HVyXHC
      ssJATz8FZWV7PtDwIvFYBuxfWySKjTynkbGJKYor6oj7lwglRWqryp9Yj37x05+zFoZXX2nl
      4pXrlNU0cKShhqHeq0zOLlHXepyJ3m40i4f33nlt295eRXUt8fFxcvKqQA5jCC8QDvnB4WZg
      ZI7202cIrE5hz6tipx0CVdMZWAgyshRiKRAnFJdBB6NB5ESVB7tZJKloLPpjJFWd2nw74n0+
      uK6njNMoicxtxOib8zO5FqE238G32soocFkwSAITq2FKPFZMRpFoQsVuNiCJwq73IusaWphY
      /RzJ4uJo0wEAsj0OJudFzpTkQHQRR2kdLnUVW1YRdeX377heNnRdZS2awKDFOHikfV8bLzzU
      gDXOf/wzNGcpbQdLCMgWivPvbOTrmkYgHETxRymvPcDc1BhoZuxGjYiiYn8iutA6oZhMhTPJ
      LzqHePe1d7jV24miVLCwukFLSw3d3YMocgxNlpAVha1Hp61OD9V1jXg8bmKRELX1h7CaJHR0
      2k6eRNBULO4imrIN28TfgnGFUELl4riPaEKmpdTJqwey0TSdYFxmYCHE/3dlnjynmdVgHKMk
      oOtwdcrIK7VZlLjNKKpOVFbZiCrEZY2ZjRhjq2GMooDZIFKZbeF7p8rw2Db3dTU0FczBRWLW
      MpRwgN6hGdrajrE4OUhAtdJ8sBolGeNqVxdl9S1ogQX8spXmhpq0I22wt5OB3l7qykro7u5h
      OWwgNH0Dd0EVAZ8XOWkgNN6J12gj1z3Bjb4+XAUVHK6veHBzuM3z0rOG23I4O+hG3/2e+xFa
      myNmyCHPrVBZuTt/xYvMQwxYRrIVkiUFOHdhnrqmk2z9yC63m5WID10XMBgkREEHMaUCoT1B
      Xeimxga6r1ymoroUfyCAoqR0gtuOtTLQdw2724ZoOoQUmkMWDJi3WLDBYCDPktoHNbqz7irZ
      eDskMXWgTNV0RAHmfXH+sW8ZRdU5XZvFkTI3xi0e3WKgvsjNjDeCL6rw5qE8sm1GFE3n5kKQ
      jwfXMRpEYkkVQQC3xYjDIqVGbknknYZ8DuTbUVX1Ho1jXU8yOTBMsTWfxbFBDh+ooL/vKrdG
      ljh1qh2DwUAyqtB0rJ2uc79CzKskS5tjI1pJgSv1OZqPn6b5eCoOuqYmFenDq+3pe6iqSvE3
      fz39nfyr/67+vt/N/Xgeetawu4wUD5qlSEYjY31XSchJFrxhfuO3v/YyHyc0U3egApvFSEwZ
      oiDfueVvGtNT0/hDcYrq6xi9OUBReR0x3wI+WaLoCepCx6Ih6k+8waGqIq5fvcqx9pMsLS1i
      FhRERymvtjYwMdiLXtSCfY/KJZquE0morIYTnBvdQNN0JAHynWYKXWbaK+82+hSCIFCWZaUi
      546wu1ESOFLuoaHIyWooSbbdiMUoId7WStZ1HU0n/fvO5ZqoO1BJBDCYzLjdbhK3bpBV0cjU
      xDAHa8sxGiW+OHeRk2+/z3D3ZYam5yhsfLEST7+o2LNK+L1//vvA4+elfhF4aFeY5TTy0ceX
      sRh1IjGVOwdYRGoONVFz+7fmltbbFxzYoRSNT37+UyIJldbjxxm+dQuDK483O44xNz5I/8gY
      JeUHWZwaQrDl8pU3T29bP9c1Hk3/fPxkapvFY0/NBToKy1NCaa3t7AVN0xlfj3JjPkgwruAw
      S6iaTqnHzNsHc7eNuHvFZBARwl5s2SUsTY8SwkVdWQ5Xr/ZwpK0ds0EkFlynd2SBk8dbkKM+
      5n0K1aV56IkQnf0D6G4frdUePvq8ixNnvkL/xc/QHPmsLy8SXJkhkFSZnl7AYjFRXH2QYs9+
      X809GxJhLz/+yc/Jq26h3KRTcLSFB2daerF5qAELkhFBSxBNSljMjz71kZMJEnENV14hZv06
      +u2QsILCQmLXe0iEQ5Q3HEdbmyaiguMBt/LHFHoWQhzIteKxGhF0DUliV04zWdUYX4/RvxjC
      KAm0FDuoybNjlMT0FFoQBDQlwdUrV3AX15JtTtA/PE37K2dxW42MDFxncUOm45U2VsdvoTpK
      qCy6M1L7Vxf44lwXv/Wdt7k548PJDF9MGTjU1Mjlzuu8frqNrs4eqsuz6B1bJTzVhc9eRHVp
      HoLZyW9893fSZdUeSnWMb31wR90ir7CYisbNqeRLEB71DNHkJFWHT2IIz/LJhWm+c/QFyfTw
      iDzEIlVmZtf44Bu/xsbqPNojHKVKFSMjGx0cyDcwMbnA4bYOLnX2IssygUiCVzpO0tN7i7Ci
      oEeiHNphGqzrOnFFZ3ojxuBKlEBcYSGQwCAK6OjkO0zU5toocZkw3HYny6qOQRIQAEXTmdyI
      c3M5gkkUOFnhptRjQdfUdMSStMUNvTI3hrPkEHODN5g3wcGqXG6NLtPRUkZRRR1h7wXWgyH6
      B0fIrzRvM+CsglIqCsfR5BjOrGyydZ2h1SQFOfmMi+MAmCwO8kqK6fr7j/CjsZH08UHHsW11
      yPDksXoKabLEGB/ycfy1jn09+sIuvNAjg7dwuByMDw5R3rxzDO5DkcycOtLAalijoTyH/v4h
      zpw9gz/gxyQJjC/6eOu9r+FdmERwNGC83YY1XSeS1EiqGmPrMaY34uQ5jBwvS63Fi5wmJFEg
      FE+yHFYYXIlydS6EyyxhMoisRpK4TAYEAUIJFbdZ4mS5i2KXKb0GVe7jAM8rqWLkwmUW1vzU
      VOcxtxrC4kp9/qnhfqylzSz2XSYYDrM2PMHxlrq0F3hxZozB8WEclWUklseZEGycqCvkJz/9
      kAOHj7O8uIzbDh993MVrv/1d8kxJOodmMsb7LBAEvOMDJJwlbIzcJNFyaF9vJT3EgI2cPdvO
      jf4hCmuaKc15dAWHvOIKNiWvj7dvrldTj67Nk4skCRRX1Ka2CTQdTdfpW4ow7UtgkgTKPWY+
      OJSNw3Svc8xhkjiYb+ZAno1AXCUua8QUlXBSpchloshpwmIQcVmk++7R3ouAgMbRUyewJNeZ
      XlynpMrJ4rKX6dlprIE4p868S5PsZ8mnbIuFLq6o4w//5W3v78Ga9OvfqLwj/FZYXEh9y+Y0
      2MDJ5kNkeDbkVdZw/bMrmJ05WLa8rqtJRkbHUDFRlGNjZmGNmoONuKzPUznrwTx0Uevw5HPm
      bD6aqqKjIzzlA2XD63GmfQk0XccsCTjNEu2lDrJtD3+IoiCQZTVs9gtUZlkQePC2wv0wmGy8
      +uZmpoAq6pvv/O0bv5lao6qqimjOpsqZGTn3C1HfMgtBga9//WsM9faRhDvbSKKRutpabg2O
      sbKh0dpyiLHxBWzVpWiahiiKj7SPvdPe9V5kaTdRVRVF2JKoTtMfbsC6puL3B5gfG8JR0UBV
      4c7bKo+LDiwEk0z7EuhAe6mDXNtjRnqqCS5f6aKu4TC3rl8jEIX3f+1djJpKf08XxqwyipwC
      N25NcfKVDmymp6Oen+HFwWAycfP6F2wsFTK/7OdA6xYnlppkcGiMg4cbmBodIhGPoktGJElC
      klJtQ9L23kYEQbhn71oU9r7LIUnStnJkRX64qF0yusEnH59jan6WX/z4I+J7vu2D0YHZkMKl
      uTDjGwnaSuy8VeMiz57Khi5H/Xxx/hLRpEJv5wXOXb4GgHdpmo8++ojuviF8K3Nc7OxBvcvJ
      FpwfRzDb6L81zetvv0NWlgUj4JsboG/Ci9Fg4NKFL9BFcccwygwvHyZ7Nu995S1KSsv54P23
      t0XtqYoMaExNzVBeVsrkzCpVlUUIgpD+96LxUAM2mGyYjKDoRpoO1z0VGctgQiOh6BwtspFr
      N2Lasgd78cIVmg4Wc7mrn6GpWQ4dSG2b5BRV8s4bHcTCMaKKSKEhyJQ3uq1cRTDj9/uxW834
      lsZxF1Qj8P+3dye/cWV7Ace/595bdWsePZTtcrnKZSfOnO50t6B5QsDTe0A/ECskJARix4Y/
      ov8H2LFihdghIXYgodf9Bp7Snc7UiZ3JiRPPNc93OIeFE14nrk4c2+nYyfkskzr3nFu+vzrn
      Tr8f9Fo1Fi59yoOlG3hGgI/msly58+QN7Jl2FIUicfL5KVqVbb67ILZCMc6dP8/JuRLhWJLT
      p04+dyweRa8cnUKSHZ3iD376J/zo00uH/u6kAE5lg3w6HSUe3D2cdCrOr7+6QTqV4Cc//jFX
      /ufnPEtEcvWrK5z/6CKy32DNTzL7Qg2eSDKB8FziqSTbDYczJ/K0KttEZy5RX/oV8ewkp8qz
      /OLaMvP50V19a++mfqvGN1evcvnyZTaqzbc9nAN55UmmFYgxNWrzz//4T/zV3/8DMyOvf+fs
      yuXL9Bz48OPzLN24Qfn0BeLhAL1WlVv3VjlRynH1xm3sWIaPLpx+rm0gYGGZAQzT4/qVq/iR
      GO31DcimUOEMKdvgv7/+imh6gmbPJ/Wd8+ZIapw//eyz57eXHQHgp5/9GbDzbO3J8+/8W5Xa
      d2zfW6JrpVCex29+/b/8+QtL6ePklUeu57S482CTSx9/TNTe326ePH2K3/zqlyxd/iXW1Em+
      +PkXfPbHf8SXv/gV5ZkJrt2vcP7cGX7x62+A5wP47KXvvER/euG5//vw4jkA/uIv/+ZAD8hr
      75fx+Xm+/q8vMKNpzs8XjnV1g1eMfcC//su/IQMOjoyTiYVe/vHvYZs+wdgomWyGpWtfE4kl
      2UkHY3JtcZlEMk57a4XiqXP72r6mvY5Oq41hBji5cILZUulYZ9p8RQAH+cOf/D5ez2Vz/T71
      zmBfndy7vcjZDy/i+xLbDoKA1dV1lGEQCgRRvs+j7R4n8vt80kvTXoNhWhTn5rn79Ve8XmLX
      o+cV605BvnSSfOkkSsp9F4E6ceFjDMMgdeZDSt9Jwzs5OQE8fR94Ln8kL9Nr7xbpu9x/cJ/r
      NxYxE5PHPqfUnscvDONYLzU0DaDf3ubqzQfEgjZzH1x8q+VFD8Nx/wHStNcSSU7wt3/31zSr
      29y6/QCnPHFs08qCDmDtPSSEQTI7xu/83tjbHsqBHecr6Jr2xgw6DW7dXsL1X/+lgx+SDmBN
      G2L50WNKhVHuL6+97aG81KEsofudOnfurTA2VYB+nZZrUp7JvzeZ/rV3jzAs7FAE4Tfe9lBe
      6lACuL61Rs83iEUDPNxwiFq780K/7D1KKeWBMgQepP1B274sXe6b7nu/bZ+12+9tu7c17mft
      XffldXUPI9vkaDrGN1dvUV54sfzo0XIoATw+s8DYtMu1GzcJ2ykCpo9Uv80L/apXsfbymZdR
      Su07kA7a9jiOW0p5LMcNOz86B2m/V+mxKdJjU8/9m5QSoQTZcPYVxQiel7ATuyYwIQSmeL1H
      k5VUz29HHVIAN6ubrKxuMDpRxGttUnVNcoHn09e87Et/lvz9IAfUsxeuf8i2wP8XN/uh+z7o
      uA8SCG973K9qL1447gzDYGNjY999PpNOp7FNm5/N/+y12z5bFTz70Y+FYsRCr/9i0HcnxUAg
      cDgBnMyOk8w+LfY19mYydmjafgghyOUOp/bTXmtTfZ9npw8H+QF7dkr6bBv6KrSmHYJObZ2t
      5svz1bxq1aOU5PHD+zxcWeNlGZy/uw0dwJq2Ry+tuWQFuXfrGreX7n5vquJXXXfo19fpEMd0
      qlQ6wy/UvbgNHcCadggM08QO2q91cetFdmIU2hs0nADpPSZ01AGsaYegVd2g4ypwugz2WWfO
      7dS482iNbrNGx9nbRnQAa9ohsCMJzizMYwVDWPuMKiNgM1+cBsvac2Dqlxk07RDcX7xONzRJ
      2FT7TlHsuwNC6RyZRBV3jytxPQNr2iE49cHvko4EiCfi+w6qQChGc/MRG7U+0T0WGdABrGmH
      oLG5wkaji99vM9jvdSyx8+ixYRqwx/w3OoA17RAkxwucnB5HWlFsY38R7LQrVJsDTDyafX0R
      S9N+ENLtcv3mEo1Wi/rmEx6ubu9rO5YdY2Fhjkg8Qza6t2Q/OoA17YC8Xgs7Oc78/BzpRJRc
      bn+ZPoQQfHvjOq12G9fTM7Cm/SCCiTEytsOtW7eJjU2z36KahmVzYr5MyA5i7PFStr6NpGkH
      JpjIF5k46FasILlcjvWHSzR6PiOxV8+vOoA17UhQSHfA2sYWMhB/rsbXy+gltKYdBU6LW8ub
      TE9PE1Jdal1vT830DKxpR0EgCt273LjRxHF8zub3FpqHHMCKpW+v0/FMzp89janL3mva3giT
      sxc/fO1mh7yEHoCZYjIWorXHy+Capu3fIc/AFgOnTUsq4nr21bQ37tADeGZqhJZrEj5A3h9N
      0/ZmVwD3+32q1eqBNhkOQK1W3UngJQSRaFgqDMMyDDwJwgKkREgFysDzHJyQiVAmpi8QhgQB
      yveRhoXpC5RQSFMhEZgSDBM810eYFvgDfNfEDATwfR9TGEgkygdhKJQvsEyBNA0MsbMNPB8h
      BK70dzIGPs0zJDwf19gZm5QWWBIDENLANBRKCUAAEsf3MU0TUwiEr/CRSNPE9A08w8NAID0I
      BBQKC4FECIVyFZgC5fq4SuL7EmUqgtLA4WnOI1/hmz6WbyANiZAG4ukz7koIpOvhSQk7vSAk
      SENiSAMZ8DB8kFgETIHvKjzpEQiaCGWgpIuSAoHYOQIME+EqpAGmEvhCID0PLAukhxDgC4MA
      El9KlBI734OSYO78LSVgqJ0Klp4wAA8TiecKghb4T8/WfN/F88AyBb6UGEikAco3wJQgxdNr
      JxJhCKRUO/toGPhygC9h4A5AWRiGQiiJh4eQAZRwEcoiGAx4w47td9GunczlcoeWd1cpRb9S
      YW3rdt0zxjKlTIqVmsAuC8xGDbvdQtSy1Gv3WP80hdUaofQ4hBitIaIWzsNHbKVmyW9E8BOS
      tfEeVSko1QWxQpC715cJ506TNb/G2Ygxde4cKysrTNhp6kYVbzOIne3SfmAzO2HRmBshg0dD
      2JhPVglGLbaET9xMQCaNUorYSoXF7AbWlkulXkKVG4yhCDVHGB9toapp+kJgmFWWHY+QHSNn
      WyRX2jwy6zQmJslvZViMrpLGonZfcO5sH48ywUCdeGhA44YH4wbJmk9v1uDB4xb+eI+LlTjX
      hUEuNw4P6zyY2KK0HqcerxOupUhlBQMviAwG8B+3aOeiKCNF1K8Sq8N6pkamnaZ68j7ZNUXd
      KHM6F6fyoM/i5hIf/SiHaGQIi8dsrynMgQEzNqRHCS12qI+aTHRtKrE4W4tLMFtG1O4Tjko2
      YxnOOnUe1SrEkiXimWlotmBCQbNKHRjvZTAQLIXTBFkhZzS4ey3AR7OKDZVBGYCs0Omc5sSo
      xUq9SUrVaOTAXU4zmGkQ2ogxkjGBDom0xXqzgyBDKpNmudma2QgAAAasSURBVHGZpH8Rx15H
      dUtkRhWR+iZ3xF1SnQ+pi8vEvTK5XHIZmDuUg/iIE+ow0ti/RLPZRClFMpl86ef8p7PZfhy0
      7UFyO+txv56DJpXfS9+dTodoNLqv7R83R2aZcZBcuW+r7dvs+7iO+6Cru4Pu97tGP4mlacfY
      W5mBnzxcpNoJMj0aZHl1i1hyDMOts766wezCaR6uPGEqXyCfG9nVVvoeNy9/QXbhR/Q37lBv
      dinMFlm+/wgrFGEkarFVazJz4jSZWOi5tkopbl/5JZHp89Bcpdpoky8WWb77AMMOk0tabLdc
      ZkplUrHwrr631h7xaLPJycIYdx+uEYolMdwWzVafuYUT3L97j0gyw0K5uKut023ymyvX+eST
      T1j69iYDHybH02xu10hkJ+hsr2CGEszNnyCwa5LxWbx5i0bfpzCeYG2rxmSxzMb9O8hQjKlU
      mMebFSYKc+SyiV19rz9eZnO7Qnosz/b6E8KJDGEGVBptyvNz3L51m/GpAsX87sfx++0ad5ef
      YAQjmG6bjqM4OV/i6jfX+fB3P+XR4g3afZ8zFy5gmy8uiyV3bt2i2nYpTaV5slElVyjRWr1H
      IDNDXNV5WOlTLJbIJncvefvtOneXH2MEIgRVl2bPozxb5NHKCoYVIST6NDoOC2cvEAm+n3PR
      W9nrycIMplJ0Ox0S6VGqlXVm5xZIj00Qtw1sy6TfH57lXhgmpcIUnoTewGE8E2Flo4rnuXie
      R8eVXDxTZmu7PrR9sTiD9CW9/oCxbJInG1t47k5bISyQPgNn+HOoI7lpwgFBv9smksxQq1YY
      OB65lMW1xWUK82cRvjO0bSAcZ2I0hfQ9fGESEA5PNhtkRsbY2lzFMgMMBn2kGpbNwWCmWMC2
      bRpdl4vnTlN/vIidmyccMKh2Blw8f5ZGrTK07/HJPFHbpt+pk587g5AOfSn44FSBlY06wUCQ
      bm/4921HU+RGUtiWgFCC2akUbS/IxGgaJT1UMMp8IUOlMay9oDBTwA4FqbUHXLxwlmatykyp
      iPI9JBaW8OkPhn9ndjTJxEiKoG0gRYS5/Dhdz2RqNEPQNvEJcaI4Sa3eGtr+ffBWAthzXTzX
      JTuexxYudihGs7JGLJtDmEFK5Vlajdr3tFY4rovrOkxPF+h0B0RNj8RYAVO6eI5DpVLDDtlD
      WzuOg+s65KcL9Hs94pZPKJsniMSOpyjlx9muDg9+3/PwPJfEyASxANihMIXpaZodl/xYinq1
      guMMz6ivnpbF9LDI58bwfMFcuQRen0gkTnYiT8KG9rBUKsrn9uJ95udKGL5HpVrFiGbo17fo
      9wdY0qNSrSCs4NC+7y3eJpkrMJ6OU69VGTgunjNgc6tGNBpmpjxHrz28Dm57e5WtLhTykzjd
      DtVai2DQwHVdXF/h9LpUqk3C4SF9K59bt+8xP1fGUj6VSgXMwM7fwHEJRuOUi9NUKsMzWHSr
      a2x0FIWpKZxBh1qjgd+tstr0mclP4TpdarXv/1u/D8zPP//88zfZwWAwACAU+u1ydmN1FWVC
      KBKl0+lRLs8ihEU6FSdgWWyur1MozRKwdl+wUL7D+nYb4TuEQwGw4xQLM8hejWxumvzECNW2
      y/TE6JAC4z5r61WE9IhEQnhGiJliCdNtkRqdIBEOsFHrUC7mn6us+Exlcw1fCQJ2mF6ny+xc
      Ga/fIRAfIT+Zw+s2GJ+aIThk3P1uk3bPxZcKU7lkctPEQyb11oC52SJerwWhFGPpIRXrlE+3
      26PZ7lOaLVCtdyjOFAkbLsnsOLnxUSr1NsXC8KLqnudQr9eJZycwvTbjUzOMZRM0BwaF3Ci1
      rXUmpovYwd1nVFJK2q0GLiaTowlUMEHU9Gn1HKQU5MfT+FaM0SFLYJSk1+vSaPUozc5QrbUo
      TU+wvraNUopMNsXmZo25cmno9+1LSafVwJMGU7kMjhEim4zQaTVxfUF+Iksfm/EXThtc1yUY
      HP5j9q45MreRNO2wvE+3kd7PM39Ne0foANa0Y0wHsKYdYzqAj4jtx/fYbA5YWlxk/wUqtffN
      kXmU8n2Xymb49//8D5IjUwjvG1Y26pw9e4rbt26SK55g5dtvyBbPcPFU6W0PVTtC9Ax8RFjh
      NHHR4/QHl/jyyy8xcHn48BGDwYCbS4s83uxwYUEHr/Y8PQMfIcX5UyTCAT75+BLVvkEyYtMb
      xEinspAZGXqPV3u/6fvA2jtH3wfWNO1Y0AGsacfYGz8Htm0b13VxnOFvnGjaYXufXvp/4+fA
      mqa9OXoJrWnHmA5gTTvGdABr2jH2f7XxzZFeVIUfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Dashboard 2' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAfbklEQVR4nO3daXAc553f8W93zz3AYAYYHIPBDRAkQPASSVGUKFmyJeuwvF7HzsbZKlfl
      hbOVqs1uKnEqTm3ispJs1dYmtlO71sqWVpZ8KbLXstaitJIs6yQpUtRFUryJ+74GwGAGc093
      5wUkSFxRFDC4Zoj/p0plwDPT/aDZv+mnn37634ppmiZCiIKkrncDhBC5kwALUcAkwEIUMAmw
      EAVMAixEAZMAC1HAJMBCFDAJsBAFTAIsRAGTAAtRwCTAQhQwCbAQBUwCLEQBkwALUcAkwEIU
      MAmwEAVMAixEAZMAC1HAJMBCFDAJsBAFTAIsRAGTAAtRwCTAQhQwCfASTIUm0I2rvyc8HSKV
      1Re1PNM0CU1OYkhlbpEj7b777rtvvRuxbKbJuXde46FHH+fN42/QvPNGQp1vcv9DP+XI4UOk
      7aU0Vpfy1OOPcvD5l3nl0DG2XrcHl02D2X6+8Z++Q+eFc7x9ppOdO7ZjUZUrruZXP3uI5m37
      cVg+uSnPP/Fzimrb8bpsn95sI8vPf/ITduzdh/axVZo8/8u/Z8Qoo76yhJ/98P9S0rhtUcv9
      6DLeePEgjz1xkJdfepmq5m1YE6N89/s/4LVDhwlu2gbRYR740d9z+NBrDM2abG0J8tiDP+CZ
      F15kLKbR3lyHcuXNIfLANRHgTGKa793/OP/tO/+dW26+Cbea4K+/+0P+87fv47YD1/PQ97/P
      vttuw1dexz13f57YwLuMGuW0BEshHuK1i1Hu+9afs2/3TlQjzauvHeLC6ROMziToP3+C0z3j
      tDTVoWd0quvq6DnzJs/9/lV0axHlHhsvPPsM7565RHVdI1ZFoTwYhESYZw4eZDAUo7G+hnMn
      jtI3OMrhI0epqm/GZbegKArpjEFtTRVHDh+hr+sc73WOsqmlHgWFYLCSH/3oUdobPBy6MMcX
      b9tD97l3ef6lI/iqaiiyqxx+6TkOH38Xjz+ALTvLe13DXDzxJmX1Ldg1wOrmrrvvpsad4IUT
      Q3S9/gy3ff2b3Lk7yEOPPc++6zrYd8vnuPXmPTz68M/oCDo4PmrlW//hT3jqJ/fTdsOtuG3a
      ev8Ti09wTXSh58Z68NRvxWFRAYV0ZArVV43HrqFZXWwKWBieVakNVnD85YO8djHCDR0NC5/v
      Pv0G3/ve93jgkcdIJZMcfOZZ2nZdx/975EGqmjs48+pvGIvB4d+/QFLP8tDDP2PfjTfhtMC5
      o89xPgS7t7WSyWR5+/CrTMWTPHT/39Kw7XoS/W/yzOtneffI7xmNW6gvTnPw5bfnV2wavPjC
      i+hGhqd++xSVTVu5dPhJBiPzLzt9NdzWUcp/+V8P8vWvf5X4ZDePPPEqB27YwY8f+jHZbBZP
      eQ27t9bzox/9lFhokL/57v/m7OAM85FTqKmpoffsWzz0D6/whdtvYmQ0Tm2wGLevltTsCN6K
      AJZMhB989/+w7/Z7mBgbpqq6DlDwe91MRxNr+m8pluYqncHC4fCWE5s6gmGCqoDVXUw6EkY3
      QcNgfCaD163wzM8foCdbxX3f/hYO64dHleZtN/DNb/47APTELCX+APW1QdwlPlqb6ij1uDEW
      zn0tfO2r93LwiV9i8zfxjT+6ndP9T/CLXzzO3X/8J/Nv0dOEEhodrY3UaXt45Eg3AVWlrb0d
      52iY9zqzH/sbirwVbGqqp8JXROYjp9CfuesLHOrKUOtzMXiil6GRQX795DNEUymmhrt44smn
      qK0pYzY6n/qt+z/Pv/+3X1v4/MnDT/PkkT7+63f+B6VFDtxulWgsi8uYQ7G6SYZH+Z9/+T3+
      6Bt/xq4t9Vw8Nk1saH5Z8VQap826cv9QYsVdGwH21bErqPDgIz+j1GFy0z1f447dQf7mh4/g
      tyVwt9xAGWH+4YXjfOVffpXfPfsMO/fdQn2VD4Cx/ks89dRTaE4Pt9+461PWluJS1xBNzU2c
      ujTKUG8XOHxU+kJMTr1/6NTs7Gwu5ae/+CVT/ef5/B//KWefO5XT36ZqFmxWDUWBQOsO6v2v
      0dDURGVGIRkLg60If1kpVnUaAJfb9eGHjSyPPf4k2z5zL4df+h0NW3Zwzxdv59Ef/B2llllu
      vuMrHH/xafTiAIMXTzIyNMCdN97I4898j19mh5iz11Ltc+TUbrE2lGvm6YSmwdjIEGms1FRX
      oQCTY8MkdY2aYBXoWfoH+hdGkSsCNXjcDtBTdPUOAqBYbDTUVhOaClNRUcbY6DiBQBXTk+MU
      l1YyGxrHV1FJIjLNeChMoKYWp1VldGQIXXVQE6ggPBXC5S3FpsHwwCD2Yh/lpSXMTE3gKvGj
      ZuJE01BaUgSmycTEJOUVfiYmpqioLCccGsflq5w/fwUMPc3kVITKCj8AyViE4bFJyioClBQ5
      GBsewlbsJZtMUuYtYjaepczneX+bmAwP9pFIzx/SPaXllPs8TE2MkjKtVFeVE52ZZGJqdv7v
      tzporq8hGYswMjFNTW0dNss1cZZ1zbp2AizEBiRfr0IUMAmwEAVMAixEAbsmRqGFWG/hRJix
      yMiar3fVA/z00Us8e6wT9ROmJwqxksJzSf70y3u5saN2Tdd7cvBt5jJzVBRVLulzH4whKznO
      V805wIsZvDYMg0w2y7e/fiOlHmeuq9qQ4vE4Lpfr098oLvPtRw6hr9PdIR1V22koa1rSZ4z3
      Zwipam5nszkHODEXprd/iFAkSZXHylw8SW1dDXFcRCbH2NbRhqZpqIqKzW7H4ZAJAUuh67ps
      sxwoG6ynl/MglqvYR7Dcy6bNW8DmYsf2FqYnI5w78RbVjS05dwnEPNl+YjGWMQptMjIVJVBW
      jJlOcPFiPyVlxbTv2sNwbyeGzA9Zlly7VGJjWdYg1ubNm1GA1ratpDI6DrsVw1So8Zcgx4/l
      0fXFFQUQG9syAqygafMTdlXNglObX5SmAKpcncqVaZq8c+oMmXQGq81KMFBJoLJivZsl8pQk
      Lc+YJvzdw79Y+P1f3HsnX7zrs+vYIpHPJMBCXEVobIjxUBh7sQ8tHSGtuqj2ubCWlBIanaCm
      JrCu7ZMAC3EV/qoaFCNN1mplRvdiN6PMhGKM9gyypWM7uq5jGAaGaaLrOtnsx4s1XM0H8ykM
      41OqJX4CCXCeURT4y7/4jySTSRwOB57iovVu0oZmmjrjs2nam51Mz85imCYWVcVht5JOZ1Dt
      DhRFQVXmx4QslqVFat0mcojVoSgKweoqYrEYbrd7vZuz4enpFFXVtWBzU2QZJ60UUVripKLY
      x/TEOIrHua7X7CXA68jIxHjl5UMEWjpwZqbpGglz4MDNOG0q6eg4rxwd4cD2Ot44eZ6du/Zw
      5t3jmA4vn/3MjVcoQytWg8XuotQ+/3NtQ8tlrwUCVevQosvJbIF11PvWMSZ1C/FEjONvvIOe
      SZPWdTCzvH3yIi4ty7FjR1FVk9hchGgizVwkLIXgxQIJ8DqyOR20b99LdGKIkvJq9rTV0T80
      TnRyiMlwhHfeOoVpL2L/gc9w4dRRSqoa8TpN0tncBjzEtUe60OuoZsc+Ro++Tl3rdkrUOGe6
      x2gJpAnRxJe++AVmwxFKS5wcO3aM/Z/7Q3rPncCsbMZple9dMU8CvI4U1cr1B25d+P3W6oaF
      n5PJJNXBagBu++z8RI7SGw6sZfNEAZCv8jyV63VBsbFIgPOUBFgshgQ4T0m5brEYOZ8DG+kY
      p891UVpZTXZukpnZOE1Nde9X5Bhhc+smuSl9GZY6o0dsTDnvJeNDg6RRiEajaFjY3tFAV+cE
      faMjXLdvfrAlnU6j63pOc0Q3OsMwZJvlYKP1XHIOcFGxm2LFgx4LkzV1JsZCOD0uWrxbmRgZ
      otzTjM1mQ9O0nOaIbnSJREK2WQ42Wq8v5z2kuLwWvz6MtaIJp5plcjZBrb+EjKmRTScwQapy
      LMNG2xFFbpb1Fe+vCi78HHTO3zVjB+xWuYNmuaQmllgM2UvylARYLIbsJXlKitrlBz2TovPC
      eWbnkowN9dE/PE48OkvaMAmFpta7eTKVUoir6eu6SDyroRpxpmIKNqaZTlmIjY7jq6jBMAxM
      08SUihzio6QLnR+SqSyb2rfQc/YEVl89FiONnkkxNhWjuu7yx6isR0UO2UuEuIrGxjo6z1+g
      rKYVLTlFIqPiLfVz/d7dTI2Poqoqmqat21UDOQLnKTkHzg+uEj87dvjnfyn3XfZaQ/3aPgHx
      SuQInKfkOrBYDAmwEAVMApynZBqlWAwJcJ6SGxnEYkiAhShgEmAhCpgEOE/JObAAwMjw21//
      ileOvcP0+ACP/ebgwkuHX3pWApyv5BxYwPxMLdUC6XgCT3mQgP/DO/2SicQyAmxkuHj+HAMj
      E6RiEXoHRzCyKRLpLNFIZMNVRhBiNZjo7L3hdrRomLSiLsy7Ns0sKdOR+0ysVHiciG6jzu+j
      6+IFKn0O+gdTZFUr2XSWLR7PwnsNw5CZRUsk2yxH19hxQ9WchCfO0nDdXmZ6L5BNZTl7/gzJ
      tI3rd7XlHmCrp5Jmc5bz5y7gdtrxlnmZ6g7RN9rLjj37wDTRDQPDNFAURWYWLZHVapVtdo1I
      pVLYbDaSiTg2hxNNVdGzGRLJNA6nAwwdw7SgohOLJ7E7XNisGjA/I69tx973l1RJsKltYbmm
      aeQe4HQyxsjIKA53EU41zXvnBmlprqUkWEdkcpgK7yY0TUNV1Pnnp8rdNUui67pss1zk2Xde
      fHqU+x/5R778hRvpG58lo2vc87kDTIz009U/gKEWY5nrIe2/EX+ikzHTzra27VT5i6+6XD0x
      TGLg0dwD7Cjy0rHNu/B73fv/6wGqfK25LlaIa4Zp6rx29C1a6qtI6zqpZIqZyRgAfr+fN14/
      SsOe22lv93G8B3yBAEMXu+gfHqHKv/kTlmmgx7pIDv0SIzEsdyMJsWpMaGpq4Njrb+Hy7sE9
      Eaa4tZHQZIi5mTFKKoNMjfTwRtcAJ0eKCNzUgM1qJZvNfGxRRjaKmZ0jNfoUerwfR+APUF1N
      EuB8Jd3n/DDed4GBcJbG+hoGuzvJqlZqy4qxlviYnIqxpfmTbylUVI3N7dvZtKUDRVEIVlRh
      tWj09g3Q0NJGdUMrmqaRyezhBlXFarFQ37QFq9W6sAzTNNDnLhHv+QEA9sq7cdb9GxTNAcj9
      wEJcldVZjD0SIhIaxVXRgF2PkEzEOdkzzh237l9SSR1VVdENk7q6WgzDRFVVDMNYKAhgGAaq
      qpKJj4Bpkp27hDF7HDMbRrX5sXh3o/nvQjeB99cjAc5TcgkpT6gaJcVFxNI6qdAwcVWhqsTN
      ro5KOnuH2dJUA8yPFq9ESR0jO0e866/ASGEp2YW96h4snq0oypWXKwHOUzIRJj94S/1Y7G5q
      i4vIppMYaFgtKopqodT78XPV5TBNnfT4cyiWYqyld2Cv+oOPXEo0OfTiP5G1lnHd1joOHzvB
      tr03SYDzlcyFzg+qZsHjmb+kY7M7L3/tI+eqy2WaBqmRJ9HnLuFu/QtU6z+7jGRmCE1EKG2o
      4vSFHu659x6Ovn5M5kILsd7mw/sE+lwnzuY//3h4AdPUuPMPv4zHCDE9lyGeTGCYihyB85Xc
      zLAx6LFuMlOHMFJjuJr+DNXySRM4TC6efoeELcBdt9Rz+Mgxtu/eLQHOV3IZaWNI9j+EmZml
      aOtfoVo9n/g+RbUsPLYX4PY7bsc0TQlwvpJ50BuDvformNk5FGvpkj+rKNKFzluapq13E8Qa
      sHivB3L/wpZ+Wp6Sc+DCYxpJfnz/XzMRTfDsU0/x1nsXAJid6OfpZ56lq3+Q558+yK+e+C0j
      A108/U/P0TM8uax1SoCFWCGn3n6btu1bmRs6Q3/cwsjIKACX3jmN4rAxMjxIKmtgic7x8qF3
      sDgsjAyPLmudEmAhVkg2A2dPnmIsbqGyyIlF0YnH45TXVVDirSSb1tm5vQ1nhY8drUE8vmoy
      8eiy1innwHlKJnIUnj03HSBwRwWa3U2kdgzDVkRvTzdt7XuwDvXj29ZGbHqUvTfegt/rZnig
      H1/78m69XdZeEp+dZCppwWNJMzI1x6b6KuKGlVQ0jL+8XEZSlyGbzWK329e7GWKJ7M75onOl
      FQEA/N5tAATrGgFwBT68e6mmvjHn5wJ/IOcAm6ZOf/8gWWcpc5k4tRVu+gZGSeoGDqcHPx/O
      583lwccbnWyz3Gy0OeQ5B3hysIdIMsPM9BgNVT5sDht6JkloepqmlvnHMX5wq1Uud2lsdLLN
      crPRen057yEVdZuoCKYYDkXRMnOc65lic3MN/tp6YjMTmPjW9cHHhU7CKxZjeXuJZidYaQf8
      VM3fFokTKCuuu9qnxCLIOXD+GO45h7OylehYN2nVRcDrwurxMTU+QXV11bq2Tb7mxYb3wXnz
      lXqLyeg04ekpUs4wKYqx61GmQ3NM9g3RtLl9oRoH5DZu8cFncx3MWnSATdMERcm3qp1C5Ejn
      uX98gpjFx+f3tzMZc9Bc7//YuwYGBkgkk8xNTOAp8n7kFfOy0JnkNm7xzytyLNVV15aKTHLw
      2Rdo2XmAkmyc6o42HDmtRiyVzIVebQbu0lp21nr4zW9/x55b773iu1q37iQzFyKqeOe70JqL
      Cq+LyqZSQmOjKEXV8w8uWOPWf+CqAU5Ewmy5/rOELr7JhckMX+pou9rbxQpa7vVB8Wms7Nt3
      HaOD3bRu3c6m+rJPfmeRn1KgtPnyWs3BYPUqt/HTXfW47Q02EXAZZFHRPMXIkMrakQCvPsWY
      o6t/Fp81xcD48qY0rperd7wVjZmhXlr23kqV24JMK1g7G21Cwnqw2kvQ9Gm6J2JUl3/yzfT5
      7FPPnOvbt9Fz4iiuyqAcgdeQXAdebRneO93JbXfey007W5iaia13g3Jy1QBP91+kd0bnc3fc
      iRmdJr1WrRJi1amMD17kyOtHOXz8FE5XYR6ervo1X1xewctPP88ZixW7p4qVK6IpPo3Mg15t
      Gp+7+wtMTobYses6iq/FAFtdPr76r/71WrVFfIQUtVt9msVGVWD9R5KXQ/aSPCVzyMViSIDz
      lByBxWLIXpKn5OFmYjEkwEIUMAmwEAUs59kC6USUzu5+MoqVYkuWcDROY0MtcVxEJ0fZsqVV
      BmKWQSZyiMXIeS+xOYtxWAwyhkZWUdjR0UhX5wS9I6fZs/8WYP48zjANqe+Ug2QyKXck5WCj
      TUHNOcCp+Bwl5TWE+wbQbSrDg2O4vcVsLt3O2GA//vZNaJqGqqhS3ykHFotFtlkOVrrXp2cz
      xOIJ3EXF6JkkBhasFgVFtaBnM1hX8BnBuch5D7Ha7WTCs2xua8OuGYTnkvi9RWRMFaPUgwly
      878oePG5CDOzEQaGR8gkkqAqVJW4UdxFRBMmm+oD69q+nAOsalYC1cGF38vff3q5DcDivPKH
      xKLJ0Tc/uNxuerouUez1k3EHsesRUqk4F/omuOPW/QuVV03TJJ1Jk0wml7T8q5XzWQzZS/KU
      FLXLD+HpKTRHEQndJD3RR0S1UltWzN5dNVzo7GNr63zBdkVRsFltOBxLq1mzqiV1hNjoyiqD
      lFUGr/ya17fGrfk4uQ4sRAGTAOcpuYQkFkMCnKekJpZYDAlwntpoExJEbiTAeUqOwGIxJMB5
      Sq4Di8WQAAtRwCTAeUpu/hCLIQHOU3IrplgMCXCekuvAYjEkwEIUMAlwnpLLSGIxcr9WYZqk
      02lUixVVMclmDaxWDdNUME0DVVXlPE6IVZZ7TazkHH2Do0QTGdxalkwmQ3llJUnVRTQ0QcfW
      LSvZTiHEFeReE8tRhMuqYC8qJzkXpq0lSFfnBD1D57j+wG3AhzWx0qkUyaT01pdC1/Ul3xwu
      wDRWdgrqbGiMwdEJrG4PiZkQWdVGbVkRNm8p45NRtjTXruj6lirnAM+O99M5Mk1TfTGkE5w+
      00N1MEB7+V6Gey9Rum3rQk0sm92+5BudNzpd12Wb5UBRV/a0zVNWgWt6BpcNKK/HrkdIxGOc
      6B4r7Iocnso6bvbXoCgqarACwwD1g41X6c11sULklYHOc2QsHoq8JYx1DZBUDMo9bna0l9Pd
      P0prw/zD0QquIoeiqFgsH6708suWMnglrg0VwXqisQSodra0NpLFgtOqoVislKZT6908KamT
      r+RmhvzgdBfjdBdf8bV8qFkmI0t5SuZCi8WQAAtRwCTAQhQwCXCeknNgsRgS4Dwl58BiMSTA
      QhQwCXCekqqUYjEkwHlKbugXiyEBFqKASYDzlAxiicWQAAtRwCTAeUquA4vFkAALUcAkwHlK
      1/X1boIA9EySC5e6ABjq66K7f5jY7DQp3WBsbHydW7eM2wn1dIK33nidzXtvZ6rvNLNzCeob
      akjgJjI5SnvbZilqtwyy7fJDOp0lmUhAJko068BmRpmejDI9MEJt4yZ0XV+oyKHr+pIHHz+4
      3p9rFdKcA6zZnDTUBjABXbOzY1tgvibW8Bn23nQrAOl0Gl3Xc/rDNrpsNivbLAcrPQHG6S7C
      btXANFBUDdVUMfUsyVQKRVEW/kNR0DRtyWMX61aRI5tJMT0Txu6YxUgn6esdptjno61sF6P9
      3fi3bsFms6FpWk5/2EbncDhkm+VgpXsu4dAYkUiE4ekK7HqYtOqi2u+jormMydFRfO7g/HpX
      dK2Ll3tJHaC8ZhOqFUo2b2Yunqak2EnWVDHLPCvYxI0pm83mRcWHjc7rr2Kfv2r+lyr/Za/V
      1gTXoUWXy70LbbVTXlGx8Lu3ZH5nswJosuMJsRZkFFqIAiYBzlNy/isWQwKcp2QEWiyGBFiI
      AiYBFqKASYDzlJwDi8WQAOcpOQcWiyEBFqKASYCFKGAS4DyV6+R2sXqS8RixRAo9m8EwIZWS
      pxMKURiMFBcudYNiUuFxo7jcxNIqLbWV69qsFfmaz6QShKbDmHqGdNYgmUhIXeNlkkGsPJOK
      4SwN4PUUkU4lOHWul8aaik//3CpbkQB3dXYyFxpiaGSEofFJuvqGVmKxQuQPh4fEZD+h8BxO
      l5t9u7dyobNvvVu1Ml1o1eagpq50/ob+kUvs2X+LVJRYJrkOnGcUCzt377ns//J5Si77/aXO
      3+Ed8i1psR/0VHPNy4rsJRYjzanTvTQ21lIUqGFysBt/exuqhFhc4wzDwDRNgiW1WLTc4mQa
      Joq6jgFu3tKx8HMpUONvv+z1X79yDqddjihLkc1m5Sicg8mZ+Jqu74OrBZsqN7OpcnNOy9B1
      PedH6SjmKo826bpBViosLplhGMyXWpLLSUuVSOt4ixzr3YxFM00z5y70qgdY5CabzaK8XyhN
      iE8iARZiDSXnZhmbiVMbKKWrswtvRQ3pyAThyBxVdS1MDvXg8lXSUFO1qOVJ/0yINZTWdaLh
      MDMjfXiDmxgb6qO2sQVPkRsLCUIzcYrc7kUvT0ZJ8oBp6HReukAsYRAMeBkeDRGobSYaGiSa
      0KmpLmV4ZJKq2mYCfqn4Wcg8JSVo6iTeyloudXUSjacx9QzxjEqdt5ybby7n5KlT+H07F7U8
      OQLnA0Wlob4ei0VjajbOzp3biExP0NDQgFXTmA7H2LFzO9HpifVuqVimkYE+ZiMzzEQTYBo0
      NbcQC88QbGwkm5zj7NkzFHvLF708OQfOA6ae4dz5S7S2tdN36SyVwWpGxiLo6Tla29oZ6DyP
      v7qa0fEoWzbVrXdzRR6RI3AeMAGLCt1d3TRu2szERJjmpiBWTaGrs5v6TZsJTUzT0ly73k0V
      eUaOwEIUMDkCC1HAJMBCFDAJsBAFTAKcF0y6uzrR9SzdPf3r3RhRQGQQK0/0nTnGmYEwgaYO
      CPeRsXqpKbVxsWeYLc1BznaPsX33Xqq8rvVuqsgjcgTOEw0dNzAxMsyORhtH3rjA9Mw0E+Pj
      RCYGOHP+PHpxjYRXfIxMpcwbCls7OtBsfjq2VOPxl2PEJ/CWBygtK8VRufjZOWLjkC60EAVM
      utBCFDAJsBAFTAIsRAGTQSwhVpmu66tWqF8CLMQqe/TRR3nwwQepr69f8WXLKLQQq+zhhx+m
      vLycL33pSyu+bDkHFqKASYCFWCND/d0kMjq9Pb2sVL9XzoGFWCNONc0rL/4eh7eadOxdxiJZ
      OpoDnDl3kabNbfRcvEhlUztbGhZXUhbkCCzEmimr2cLk8CAH9rXz6qEjxKenGZoYR89Gefft
      9xiYNdlcv7TnDcsRWIi1oihs3tqBTbWwfWsb2H2oho7N5SXgLaHa6VnyI1YkwEKsoRv27wdg
      /613rMjypAstRAGTI7AQa8g0srz11lvs2L2Poa6zTEZ1WhsqudDZi2ovxu80mIim2bnrOix6
      CkOz4bB9GNN0IsLJU2cp9gfxWJJyBBZiLenpJKZikkknmYzoBD0Q1t3s7mjB6S5iaGQYu92J
      VVPpPPkGv3v5DXq7L3Do8GEmw3EsVifbd2xnZmqckdCsBFiItWRxFFFkt4JmJ+Czcb5rAFVR
      uNjVT2tzHTffdhdBD/QOz1BRGWT7zg4mpyPsv24rg8PD6JkE7544w65du1BQJMBCrKV4eJKR
      8WkudfWQyWbwBZupq3Dj9VfhtCp0nTtF11iMumovJVWVjPV2U1tdzvGTF2lubCA6O00qm6G7
      b5CqsmKZCy3EapO50EKIK5IAC1HAJMBCFDAJsBAFTAIsRAGTAAtRwCTAQhQwCbAQBUwCLEQB
      kwALUcAkwEIUMJkLLcQqe/LJJ3nggQdwOp0rvmwJsBAFTLrQQhQwCbAQBUwCLEQBkwALUcAk
      wEIUMAmwEAVMAixEAZMAC1HAJMBCFDAJsBAFTAIsRAGTAAtRwCTAQhQwCbAQBUwCLEQBkwAL
      UcD+P4qu2t9Gbu1NAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Extraction Rate over year' width='240'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='240' name='India' width='240'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='99' name='India vs China in each Category' width='240'>
      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
      CB2TAAuhY/8AqFD/A618tMIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Sheet 11' width='240'>
      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
      Yv8ffYpujHTZYmIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Sheet 6' width='240'>
      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
      jaHYozMt0CMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Sheet 7' width='240'>
      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
      /n8lP/cfn/ch8gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Sheet 7 (2)' width='240'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Sheet 8' width='240'>
      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
      gofWPW73GNJiwGQrRVHw5O0/4sJ388SAyXbFnmL81c6/g8flsXsU6TBgKgitdW14fMNTdo8h
      HQZMBUGBgic2PonbG7faPYpUGDAVDI+rCM/d9TzqyhrsHkUaDJgKSpW/Gn+76ycoKSq1exQp
      MGAqOGtqW/Hczud5UbQ8MGAqSNuX78CP73gWLoVf8pgNA6aCpCgKdrc+gh9u+TEUKHaPU7AY
      MBUsRVHw6Ibv4+nNzzDiGTBgKmiqouKJjU/j4fX8uuV0GDAVPFVR8dTtf4o7m79r9ygFhwGT
      FIo9fvzNrr/HI+uf4MvpqzBgkkaRqwjPbP1zPPud5+B1c4F4AFCEEGLqh2g0ivLycjvnIbop
      IQS6x07i55/+O8YTQbvHsRUDJikJIRBOhvDyl/+J4wNHICBu/ksOxIBJajkjh/d7DuB3Hb9B
      IhO3exzLMWByhOHJQfz66MvoHD6Oq/5LOx4DJsfIGTm0nzuE/Z37MBa/aPc4lmDA5DgJLY63
      T72Bd7vfQiKTsHscU7hVN7Yt38GAyblCyQm8ffJ1fNDzLtK5tN3jLAhVUbGlaRv+ZNMPsLKm
      hQGT84WTIbzX8w7eO/0OYlrU7nHmxa26sWPFLjzc9jhWVK2Colz6MgsDpkVBCAEtp6H9/CF8
      dPZ9nAl22z1SXgKl9bh79X24t+V7qPLXXAl3CgOmRccQBgYj/Th87hCODnyB4clBu0e6RoWv
      EluW3oEdK+5GW90GuFX3DeFOYcC0aAkI5PQcBiP96Bg6jhMjHTg30QvN4vfLLsWFpoqlWN+w
      Cbc3bkVrYB28bt+M0V6NARNdphs6Epk4zofOoWfsFHrHz+BibAQTiXFkjeyCbENVVFQWL0Gg
      tA4rqlZhbWAdVtesRWXxknmti82AiWYghEBG15DIJBCMjyEYv4hgfAzhZAgxLYqYFkMqm4Rh
      GNCFDggBVXVBVVR43V6UectR5i1HRXElakoDqC0NIFBahzJvGXyeYqjKrZ9LxIDJsYQwEBwP
      IVBbc+U2I5tCOK5jSYmKUz19MIRAffNq1Jb7MTYyiIraRnjd+YclhICAgCEMQFxaRURV1Lxe
      /i4Enk5IjnX2xBH8x6v7r/wsjAw+PPgm3n2vHQCgqgpGejpwZmQSseB5vLrnFfSH5/ZSeSpY
      t+qG2+WGS3VZFi/AgMnB1my6E22rvl0kXlGLcP8jD6HUo0At8qOtrQ2Gtwp3rKrGl8e6cdfO
      zTZOOz9uuwcgssv4uU6ULr8NRmwU/cMjmBg6jaWZBqx54A67R8sb3wOTY3312QEc6jiL1eu3
      olpJY+OdW3Hg9TcxMh7FfY8+DTUxghXrboPv8nve4b4uuGvXIVAmz36NAZPzCQPhyTiWVDrv
      /zbfA5PzKaoj4wUYMJHUGDCRxBgwkcQYMJHEGDCRxBgwkcQYMJHEGDCRxBgwkcQYMJHEGDCR
      xBgwkcQYMJHEGDCRxBgwkcQYMJHEGDCRxBgwkcQYMJHEGDCRxBgwkcQYMJHEGDCRxBgwkcQY
      MJHEGDCRxBgwkcQYMJHEGDCRxBgwkcQYMJHEGDCRxBgwkcQYMJHEGDCRxBgwkcQYMJHEGDCR
      xBgwkcQYMJHEGDCRxBgwkcQYMJHEGDCRxBgwkcQYMJHEGDCRxBgwkcQYMJHEGDCRxBgwkcT+
      HwPCmD6Ujo2kAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Sheet 8 (2)' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAALfElEQVR4nO3dW08caX7H8V919RHohqYBwwAGbHzEOzaeg3c3mlyslEhRlOx1XkCSl7Ov
      ItJKUfYmUqRoldxFiUbaOdhje2282OA2x6ahm6aP1fXshUeszVrBm6oh8x++H8lSFxZ6/jdf
      PV1Uqx/POecEwKTE//cAAP7vCBgwLHnWC4ZhqH/69QO1usFZLw384Jx5wM45fbWypZ/cmjnr
      pYEfnMgBd1oNVao1yfM1PjGu7lFNXaVVLAyo2w2UTvtqtQJlsymFYagwDFXMZ/U3P1mMY37g
      XIttB15/9lv5KU/ra5vKuLb6V5ZU2d1RtldXevKapgcySiQS6vf78hKeMplMXEsD51bkP2Jl
      ckOaGh9WtjilVHCkqYuLurw4rYPKocqrj7TTyWp6dCCOWQGcEMtfoV++eKGZuTmlkim1mk21
      Gw352bSmF67Kbx+oGYRxLAPghBgCdlImr7FCVvnSlPr1stb3PV2cLKg4Mqo7y0va3twVnxYB
      4hfDPbCnubm51y8TSd348O7x/0xNjEuSFmYL0ZcB8Ef4IAdgGAEDhhEwYBgBA4YRMGAYAQOG
      ETBgGAEDhhEwYBgBA4YRMGAYAQOGETBgGAEDhhEwYBgBA4YRMGAYAQOGETBgGAEDhhEwYBgB
      A4bFEnDQ66rd6co5p6DXVbcXyDmnfj98/bOgH8cyAE6I/L3Q/daBfnN/RUOFghZmJvXV/Yfy
      XKjrt5e1tbWlYa+lztCsFiaH45gXwBsiB7xdXlezFyisH6q672t28Ucqpg+0uVPTq9XHqk9c
      1r3F4eOTCcPw9a7c6/XimB841yIHnEymNH/lpkaCqtYqNRVKowrCtrzUsD6Yv6x6paaek5Ke
      J9/35XmePM9TKpWKY37gXIt8Dzx+8ZL21x5rZfNAV69dV31rRU/KR7o4Nax8fkR3b1/R87VN
      6dtwAcQn8g7s+Rnd/fTHx9d3Pr53/Hr2gylJ0tWhqKsAeBceIwGGETBgGAEDhhEwYBgBA4YR
      MGAYAQOGETBgGAEDhhEwYBgBA4YRMGAYAQOGETBgGAEDhhEwYBgBA4YRMGAYAQOGETBgGAED
      hhEwYBgBA4YRMGAYAQOGRT6ZQb0jff7FN/IzA1q6eV0vnz1WSzndvDqv6kFdxcGEtmueZiZH
      YhgXwJsiB9yq7SpI53Xl0px69W31s+O6kKiqvFNXq1HVq9Wqrt/95O1fclK/z5nBQFSR30Kn
      hye1cGFYq4+/1sZ+Q0NDeQ0ND6vXbKu8+kidZEG5ZEJhGCoIAsIFYhR5B24fNRTIV8pPaGAg
      r61Xa6rrSKX565pxt5Tt1vVyr6GZ0pCSicTrgD3J9/045gfOtcgBDxSKqh2WdWHhhiZKBeUz
      vjretCaGB5XPppXLLujw8CiOWQGcEP140YSvD2bnjq9HxiaPXw/kXu+yhUI+6jIA3oHHSIBh
      BAwYRsCAYQQMGEbAgGEEDBhGwIBhBAwYRsCAYQQMGEbAgGEEDBhGwIBhBAwYRsCAYQQMGEbA
      gGEEDBhGwIBhBAwYRsCAYQQMGEbAgGEEDBgWS8AuaGtldV3OOW28WNGztU25MFCtfqiw39Zu
      pRbHMgBOiH68qKTVp0+0WmlqupjSbiulEW3q1V5OhwcVhfU9TS99HMcyAE6IHPBRdVNBblyj
      g5tqtVsqlSZUTCe1sXuk8u++UeHCDY1kffX7fQVBIOecnHPq9XpxzA+ca9FPJ+x0Vavs6Pnz
      5yoVl9Xo7in0qsoWFzRz+ZbCekV7Rz2VBlPy/dche56nVCoVx/zAuRY54NLUnEpTc1qYn9fY
      2JhevXiqpia0WBpSLZPQyKU5be/V5AbH5MUxMYBjsdwDS9L4+LgkaWbh2vHPisMFSdLkxFhc
      ywB4A4+RAMMIGDCMgAHDCBgwjIABw04NOOh11Wy15ST1Oh2FZzAUgPdzymOkvv79V7/Uy8qB
      fvxXf6fEswf64C9/Jh4KAd8Pp+zATn5+Un//j/+gh//5L/r6WflspgLwXk4JOKlP795UvdHS
      /OIlZSbGNXQ2cwF4D6feA49OTum//+PXKk7NK2jUuAcGvkfe66/QyYTT5uaWOs7J/64nAvDe
      Tv0s9P5+TT/7659re6eixcUrypzFVADeyyk7cFe/+fy+/HRW0zPT2vzmgfhuDeD745QdOKWc
      9vWrf/03DaedygehPj2buQC8h1MC9vTTv/hbbW2U1epJn83O8tEt4Hvk1HtgL+FrambuLGYB
      8CdiQwUMI2DAMAIGDCNgwDACBgwjYMAwAgYMI2DAsMgBu36grY2ytisHcs6pXt1VZb8uF4Zq
      tTtyYaDGUSuOWQGcEPlkhm6npcAlVF37rbqdWW1t7ynrWgov39Te7o4y3Zpy0zf4IgDgOxA5
      4MxAXu3nK6o2pVLY1uTMJY2mDrRRqau8+lCFiau6N5JTGIZv/Wu12JWBqCIH3A96mr9+W/6T
      +zo47CoZNJRJ1JXMXdD0wnW1qlUd9UINphJKJBLq9/tKJBLK5XJxzA+ca5Hvgbutuu5/+aX2
      uyldXrwsHW1p49DX7IW8RoujurO8pN3tXbk4pgXwlsg7cC5f0t2PS8fX127dOX49Of76C2jn
      Z/JRlwHwDjxGAgwjYMAwAgYMI2DAMAIGDCNgwDACBgwjYMAwAgYMI2DAMAIGDCNgwDACBgwj
      YMAwAgYMI2DAMAIGDCNgwDACBgwjYMAwAgYMI2DAMAIGDCNgwDACBgyLfDJDr1nT/YdP1HO+
      bt++pafffK22y+ru7WvaruxrfFB6dZjRpeliHPMCeEPkgBOZIS1/9InWnz7Qy/UXGrpwWXP+
      ntY26+q2a9pYq+mje5+8/UvOqdfrRV0aOPciB+wnPD19+JW8/JRK6aaaibSS6Zxcs6dXz59o
      aGxRvue9dbSoPE/JZOSlgXMvckX75RW93O9qOtVQario8uNH2nCBrvzotoJwSSOJjlZeVbQ4
      Pabkt8eLSpLneZGHB867yAEXphb06XBbzktocHBAHy1/qL58ZTMpFRbm5fsJ9XpBDKMCOCn6
      W+hkWvlC+g/X2T8c3J1M+pKkdDoVdRkA78BjJMAwAgYMI2DAMAIGDCNgwDACBgwjYMAwAgYM
      I2DAMAIGDCNgwDACBgwjYMAwAgYMI2DAMAIGDCNgwDACBgwjYMAwAgYMI2DAMAIGDCNgwDAC
      BgyLJeBep6lWJ5Dk1KhVVa015FyoTqcr5/pqNjtxLAPghMgnMwTthr76/L+Uvbisq2O+Hq28
      VMa11b+ypMrujrK9utKT1zQwEMe4AN4UOeBkdkhLN65prSk1DmuaurioYmpfm5VDlVcfqTCx
      qHujA2+dTug4XhSIRaxnfKaSKbWaTeU6DfnZcU0vXFVzr6pmEGogmVDi29MJPc9TKsV5SUBU
      ke+B24dVPVx5qZ313ynIFNWvlbW+7+niZEHFkVHdWV7S9uauXBzTAnhL5B04mx/VJz/97Ph6
      9MO7x6+nJsYlSQuzhajLAHgHHiMBhhEwYBgBA4YRMGAYAQOGETBgGAEDhhEwYBgBA4YRMGAY
      AQOGETBgGAEDhhEwYBgBA4YRMGAYAQOGETBgGAEDhhEwYBgBA4bF+r3QYdDWl198qa7LaPnO
      TW3t7mksF2qnPaRL08U4lwKgmAOu721pdPq6Rv09lbfqah5Wtf2qo4/vzca5DIBvxfoWOnRO
      fjIpP52WCwJVdzYU+lkl+FZ34DsRa8CFkZLWn3yhLx6saWJyWBdmF3VlIq3Ha1uczAB8B2J9
      C53M5vVnn/358XVh8ZIkqRTnIgCOec65M9kcnXPHpxP+4p//R51e/yyWBX7QzjRgAPGK9S30
      /8bzvLNaCjg3+CAHYBgBA4YRMGAYAQOGETBgGAEDhhEwYBgBA4YRMGAYAQOGETBgGAEDhhEw
      YBgBA4YRMGAYAQOGETBgGAEDhhEwYBgBA4b9HjXvT6kY+yEzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Sheet 9' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Story 1' width='240'>
      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
      Hcz/A1il7meNH7KaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Trend of Each Co2 Emission Category' width='240'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
